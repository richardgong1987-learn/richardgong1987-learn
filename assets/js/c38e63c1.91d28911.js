"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[4953],{3905:function(n,t,e){e.d(t,{Zo:function(){return u},kt:function(){return g}});var r=e(67294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function l(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function c(n,t){if(null==n)return{};var e,r,a=function(n,t){if(null==n)return{};var e,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var s=r.createContext({}),o=function(n){var t=r.useContext(s),e=t;return n&&(e="function"==typeof n?n(t):l(l({},t),n)),e},u=function(n){var t=o(n.components);return r.createElement(s.Provider,{value:t},n.children)},h={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(n,t){var e=n.components,a=n.mdxType,i=n.originalType,s=n.parentName,u=c(n,["components","mdxType","originalType","parentName"]),d=o(e),g=a,p=d["".concat(s,".").concat(g)]||d[g]||h[g]||i;return e?r.createElement(p,l(l({ref:t},u),{},{components:e})):r.createElement(p,l({ref:t},u))}));function g(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var i=e.length,l=new Array(i);l[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=n,c.mdxType="string"==typeof n?n:a,l[1]=c;for(var o=2;o<i;o++)l[o]=e[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,e)}d.displayName="MDXCreateElement"},55602:function(n,t,e){e.r(t),e.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return u},default:function(){return d}});var r=e(83117),a=e(80102),i=(e(67294),e(3905)),l=["components"],c={},s="\u7b2c\u4e09\u7ae0\uff1a\u5b57\u7b26\u4e32",o={unversionedId:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter03",id:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter03",isDocsHomePage:!1,title:"\u7b2c\u4e09\u7ae0\uff1a\u5b57\u7b26\u4e32",description:"\u9762\u8bd5\u989814\uff1a\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u4f4d\u8bcd",source:"@site/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter03.md",sourceDirName:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main",slug:"/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter03",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter03",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter03.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u7b2c\u4e8c\u7ae0\uff1a\u6570\u7ec4",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter02"},next:{title:"\u7b2c\u56db\u7ae0\uff1a\u94fe\u8868",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter04"}},u=[{value:"\u9762\u8bd5\u989814\uff1a\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u4f4d\u8bcd",id:"\u9762\u8bd5\u989814\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u4f4d\u8bcd",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801",children:[],level:3}],level:2},{value:"\u9762\u8bd5\u989815\uff1a\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u53d8\u4f4d\u8bcd",id:"\u9762\u8bd5\u989815\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u53d8\u4f4d\u8bcd",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-1",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-1",children:[],level:3}],level:2},{value:"\u9762\u8bd5\u989816\uff1a\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u5b57\u7b26\u4e32",id:"\u9762\u8bd5\u989816\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u5b57\u7b26\u4e32",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-2",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-2",children:[{value:"\u89e3\u6cd5\u4e00",id:"\u89e3\u6cd5\u4e00",children:[],level:4},{value:"\u89e3\u6cd5\u4e8c",id:"\u89e3\u6cd5\u4e8c",children:[],level:4}],level:3}],level:2},{value:"\u9762\u8bd5\u989817\uff1a\u542b\u6709\u6240\u6709\u5b57\u7b26\u7684\u6700\u77ed\u5b57\u7b26\u4e32",id:"\u9762\u8bd5\u989817\u542b\u6709\u6240\u6709\u5b57\u7b26\u7684\u6700\u77ed\u5b57\u7b26\u4e32",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-3",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-3",children:[],level:3}],level:2},{value:"\u9762\u8bd5\u989818\uff1a\u6709\u6548\u7684\u56de\u6587",id:"\u9762\u8bd5\u989818\u6709\u6548\u7684\u56de\u6587",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-4",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-4",children:[],level:3}],level:2},{value:"\u9762\u8bd5\u989819\uff1a\u6700\u591a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u5f97\u5230\u56de\u6587",id:"\u9762\u8bd5\u989819\u6700\u591a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u5f97\u5230\u56de\u6587",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-5",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-5",children:[],level:3}],level:2},{value:"\u9762\u8bd5\u989820\uff1a\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u4e2a\u6570",id:"\u9762\u8bd5\u989820\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u4e2a\u6570",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-6",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-6",children:[],level:3}],level:2}],h={toc:u};function d(n){var t=n.components,e=(0,a.Z)(n,l);return(0,i.kt)("wrapper",(0,r.Z)({},h,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u7b2c\u4e09\u7ae0\u5b57\u7b26\u4e32"},"\u7b2c\u4e09\u7ae0\uff1a\u5b57\u7b26\u4e32"),(0,i.kt)("h2",{id:"\u9762\u8bd5\u989814\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u4f4d\u8bcd"},"\u9762\u8bd5\u989814\uff1a\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u4f4d\u8bcd"),(0,i.kt)("h3",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,i.kt)("p",null,'\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32s1\u548cs2\uff0c\u5982\u4f55\u5224\u65ads2\u4e2d\u662f\u5426\u5305\u542bs1\u7684\u67d0\u4e2a\u53d8\u4f4d\u8bcd\uff1f\u5982\u679cs2\u4e2d\u5305\u542bs1\u7684\u67d0\u4e2a\u53d8\u4f4d\u8bcd\uff0c\u5219s1\u81f3\u5c11\u6709\u4e00\u4e2a\u53d8\u4f4d\u8bcd\u662fs2\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5047\u8bbe\u4e24\u4e2a\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u82f1\u8bed\u5c0f\u5199\u5b57\u6bcd\u3002\u4f8b\u5982\u8f93\u5165\u5b57\u7b26\u4e32s1\u4e3a"ab"\uff0cs2\u4e3a"dgcaf"\uff0c\u7531\u4e8es2\u4e2d\u5305\u542bs1\u7684\u53d8\u4f4d\u8bcd"ba"\uff0c\u56e0\u6b64\u8f93\u51fa\u662ftrue\u3002\u5982\u679c\u8f93\u5165\u5b57\u7b26\u4e32s1\u4e3a"ac"\uff0cs2\u4e3a"dcgaf"\uff0c\u8f93\u51fa\u4e3afalse\u3002'),(0,i.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801"},"\u53c2\u8003\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public boolean checkInclusion(String s1, String s2) {\n    if (s2.length() >= s1.length()) {\n        int[] counts = new int[26];\n        for (int i = 0; i < s1.length(); ++i) {\n            counts[s1.charAt(i) - 'a']++;\n            counts[s2.charAt(i) - 'a']--;\n        }\n\n        if (areAllZero(counts)) {\n            return true;\n        }\n\n        for (int i = s1.length(); i < s2.length(); ++i) {\n            counts[s2.charAt(i) - 'a']--;\n            counts[s2.charAt(i - s1.length()) - 'a']++;\n            if (areAllZero(counts)) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nprivate boolean areAllZero(int[] counts) {\n    for (int count : counts) {\n        if (count != 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n")),(0,i.kt)("h2",{id:"\u9762\u8bd5\u989815\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u53d8\u4f4d\u8bcd"},"\u9762\u8bd5\u989815\uff1a\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u53d8\u4f4d\u8bcd"),(0,i.kt)("h3",{id:"\u9898\u76ee-1"},"\u9898\u76ee"),(0,i.kt)("p",null,'\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32s1\u548cs2\uff0c\u5982\u4f55\u627e\u51fas2\u7684\u6240\u6709\u53d8\u4f4d\u8bcd\u5728s1\u4e2d\u7684\u8d77\u59cb\u4e0b\u6807\uff1f\u5047\u8bbe\u4e24\u4e2a\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u82f1\u8bed\u5c0f\u5199\u5b57\u6bcd\u3002\u4f8b\u5982\u8f93\u5165\u5b57\u7b26\u4e32s1\u4e3a"cbadabacg"\uff0cs2\u4e3a"abc"\uff0cs2\u6709\u4e24\u4e2a\u53d8\u4f4d\u8bcd"cba"\u548c"bac"\u662fs1\u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u5b83\u4eec\u5728s1\u4e2d\u7684\u8d77\u59cb\u4e0b\u68070\u548c5\u3002'),(0,i.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-1"},"\u53c2\u8003\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"    public List<Integer> findAnagrams(String s1, String s2) {\n        List<Integer> indices = new LinkedList<>();\n        if (s1.length() >= s2.length()) {\n            int[] counts = new int[26];\n            for (int i = 0; i < s2.length(); ++i) {\n                counts[s2.charAt(i) - 'a']++;\n                counts[s1.charAt(i) - 'a']--;\n            }\n\n            if (areAllZero(counts)) {\n                indices.add(0);\n            }\n\n            for (int i = s2.length(); i < s1.length(); ++i) {\n                counts[s1.charAt(i) - 'a']--;\n                counts[s1.charAt(i - s2.length()) - 'a']++;\n                if (areAllZero(counts)) {\n                    indices.add(i - s2.length() + 1);\n                }\n            }\n        }\n        \n        return indices;\n    }\n    \n    private boolean areAllZero(int[] counts) {\n        for (int count : counts) {\n            if (count != 0) {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n")),(0,i.kt)("h2",{id:"\u9762\u8bd5\u989816\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u5b57\u7b26\u4e32"},"\u9762\u8bd5\u989816\uff1a\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u5b57\u7b26\u4e32"),(0,i.kt)("h3",{id:"\u9898\u76ee-2"},"\u9898\u76ee"),(0,i.kt)("p",null,'\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u8be5\u5b57\u7b26\u4e32\u4e2d\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u8fde\u7eed\u5b50\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u5b57\u7b26\u4e32"babcca"\uff0c\u5b83\u6700\u957f\u7684\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u4e32\u7684\u5b50\u5b57\u7b26\u4e32\u662f"abc"\uff0c\u957f\u5ea6\u4e3a3\u3002'),(0,i.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-2"},"\u53c2\u8003\u4ee3\u7801"),(0,i.kt)("h4",{id:"\u89e3\u6cd5\u4e00"},"\u89e3\u6cd5\u4e00"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public int lengthOfLongestSubstring(String s) {\n    int[] counts = new int[256];\n    int longest = s.length() > 0 ? 1 : 0;\n    for (int i = 0, j = -1; i < s.length(); ++i) {\n        counts[s.charAt(i)]++;\n        while (hasGreaterThan1(counts)) {\n            ++j;\n            counts[s.charAt(j)]--;\n        }\n\n        longest = Math.max(i - j, longest);\n    }\n\n    return longest;\n}\n\nprivate boolean hasGreaterThan1(int[] counts) {\n    for (int count : counts) {\n        if (count > 1) {\n            return true;\n        }\n    }\n\n    return false;\n}    \n")),(0,i.kt)("h4",{id:"\u89e3\u6cd5\u4e8c"},"\u89e3\u6cd5\u4e8c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public int lengthOfLongestSubstring(String s) {\n    int[] counts = new int[256];\n    int longest = s.length() > 0 ? 1 : 0;\n    int countDup = 0;\n    for (int i = 0, j = -1; i < s.length(); ++i) {\n        counts[s.charAt(i)]++;\n        if (counts[s.charAt(i)] == 2) {\n            countDup++;\n        }\n\n        while (countDup > 0) {\n            ++j;\n            counts[s.charAt(j)]--;\n            if (counts[s.charAt(j)] == 1) {\n                countDup--;\n            }\n        }\n\n        longest = Math.max(i - j, longest);\n    }\n\n    return longest;\n}\n")),(0,i.kt)("h2",{id:"\u9762\u8bd5\u989817\u542b\u6709\u6240\u6709\u5b57\u7b26\u7684\u6700\u77ed\u5b57\u7b26\u4e32"},"\u9762\u8bd5\u989817\uff1a\u542b\u6709\u6240\u6709\u5b57\u7b26\u7684\u6700\u77ed\u5b57\u7b26\u4e32"),(0,i.kt)("h3",{id:"\u9898\u76ee-3"},"\u9898\u76ee"),(0,i.kt)("p",null,'\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32s\u548ct\uff0c\u8bf7\u627e\u51fas\u4e2d\u5305\u542bt\u7684\u6240\u6709\u5b57\u7b26\u7684\u6700\u77ed\u5b50\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\u8f93\u5165s\u4e3a\u5b57\u7b26\u4e32"ADDBANCAD"\uff0ct\u4e3a\u5b57\u7b26\u4e32"ABC"\uff0c\u5219s\u4e2d\u5305\u542b\u5b57\u7b26\'A\'\u3001\'B\'\u3001\'C\'\u7684\u6700\u77ed\u5b50\u5b57\u7b26\u4e32\u662f"BANC"\u3002\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32""\u3002\u5982\u679c\u5b58\u5728\u591a\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4efb\u610f\u4e00\u4e2a\u3002'),(0,i.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-3"},"\u53c2\u8003\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public String minWindow(String s, String t) {\n    HashMap<Character, Integer> charToCount = new HashMap<>();\n    for (char ch : t.toCharArray()) {\n        charToCount.put(ch, charToCount.getOrDefault(ch, 0) + 1);\n    }\n\n    int count = charToCount.size();\n    int start = 0, end = 0, minStart = 0, minEnd = 0;\n    int minLength = Integer.MAX_VALUE;\n    while (end < s.length() || (count == 0 && end == s.length())) {\n        if (count > 0) {\n            char endCh = s.charAt(end);\n            if (charToCount.containsKey(endCh)) {\n                charToCount.put(endCh, charToCount.get(endCh) - 1);\n                if (charToCount.get(endCh) == 0) {\n                    count--;\n                }\n            }\n\n            end++;\n        } else {\n            if (end - start < minLength) {\n                minLength = end - start;\n                minStart = start;\n                minEnd = end;\n            }\n\n            char startCh = s.charAt(start);\n            if (charToCount.containsKey(startCh)) {\n                charToCount.put(startCh, charToCount.get(startCh) + 1);\n                if (charToCount.get(startCh) == 1) {\n                    count++;\n                }\n            }\n\n            start++;\n        }\n    }\n\n    return minLength < Integer.MAX_VALUE\n        ? s.substring(minStart, minEnd)\n        : "";\n}\n')),(0,i.kt)("h2",{id:"\u9762\u8bd5\u989818\u6709\u6548\u7684\u56de\u6587"},"\u9762\u8bd5\u989818\uff1a\u6709\u6548\u7684\u56de\u6587"),(0,i.kt)("h3",{id:"\u9898\u76ee-4"},"\u9898\u76ee"),(0,i.kt)("p",null,'\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u5b57\u7b26\u4e32\u3002\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5b57\u6bcd\u6216\u8005\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u5ffd\u7565\u5927\u5c0f\u5199\u3002\u4f8b\u5982\uff0c"A man, a plan, a canal: Panama"\u662f\u4e00\u4e2a\u56de\u6587\u5b57\u7b26\u4e32\uff0c\u800c"race a car"\u4e0d\u662f\u3002'),(0,i.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-4"},"\u53c2\u8003\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public boolean isPalindrome(String s) {\n    int i = 0;\n    int j = s.length() - 1;\n    while (i < j) {\n        char ch1 = s.charAt(i);\n        char ch2 = s.charAt(j);\n        if (!Character.isLetterOrDigit(ch1)) {\n            i++;\n        } else if (!Character.isLetterOrDigit(ch2)) {\n            j--;\n        } else {\n            ch1 = Character.toLowerCase(ch1);\n            ch2 = Character.toLowerCase(ch2);\n            if (ch1 != ch2) {\n                return false;\n            }\n\n            i++;\n            j--;\n        }       \n    }\n\n    return true;\n}\n")),(0,i.kt)("h2",{id:"\u9762\u8bd5\u989819\u6700\u591a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u5f97\u5230\u56de\u6587"},"\u9762\u8bd5\u989819\uff1a\u6700\u591a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u5f97\u5230\u56de\u6587"),(0,i.kt)("h3",{id:"\u9898\u76ee-5"},"\u9898\u76ee"),(0,i.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5224\u65ad\u5982\u679c\u6700\u591a\u4ece\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u80fd\u4e0d\u80fd\u5f97\u5230\u4e00\u4e2a\u56de\u6587\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8f93\u5165\u5b57\u7b26\u4e32\"abca\"\uff0c\u7531\u4e8e\u5220\u9664\u5b57\u7b26'b'\u6216\u8005'c'\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u56de\u6587\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u8f93\u51fa\u4e3atrue\u3002"),(0,i.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-5"},"\u53c2\u8003\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public boolean validPalindrome(String s) {\n    int start = 0;\n    int end = s.length() - 1;\n    for (; start < s.length() / 2; ++start, --end) {\n        if (s.charAt(start) != s.charAt(end)) {\n            break;\n        }\n    }\n\n    return start == s.length() / 2\n        || isPalindrome(s, start, end - 1)\n        || isPalindrome(s, start + 1, end);\n}\n\nprivate boolean isPalindrome(String s, int start, int end) {\n    while (start < end) {\n        if (s.charAt(start) != s.charAt(end)) {\n            break;\n        }\n\n        start++;\n        end--;\n    }\n\n    return start >= end;\n}\n")),(0,i.kt)("h2",{id:"\u9762\u8bd5\u989820\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u4e2a\u6570"},"\u9762\u8bd5\u989820\uff1a\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u4e2a\u6570"),(0,i.kt)("h3",{id:"\u9898\u76ee-6"},"\u9898\u76ee"),(0,i.kt)("p",null,'\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u95ee\u5b57\u7b26\u4e32\u91cc\u6709\u591a\u5c11\u56de\u6587\u8fde\u7eed\u5b50\u5b57\u7b26\u4e32\uff1f\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32\u91cc"abc"\u67093\u4e2a\u56de\u6587\u5b57\u7b26\u4e32\uff0c\u5206\u522b\u4e3a"a"\u3001"b"\u3001"c"\uff1b\u800c\u5b57\u7b26\u4e32"aaa"\u91cc\u67096\u4e2a\u56de\u6587\u5b50\u5b57\u7b26\u4e32\uff0c\u5206\u522b\u4e3a"a"\u3001"a"\u3001"a"\u3001"aa"\u3001"aa"\u548c"aaa"\u3002'),(0,i.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-6"},"\u53c2\u8003\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"    public int countSubstrings(String s) {\n        if (s == null || s.length() == 0) {\n            return 0;\n        }\n        \n        int count = 0;\n        for (int i = 0; i < s.length(); ++i) {\n            count += countPalindrome(s, i, i);\n            count += countPalindrome(s, i, i + 1);\n        }\n        \n        return count;\n    }\n    \n    private int countPalindrome(String s, int start, int end) {\n        int count = 0;\n        while (start >= 0 && end < s.length()\n               && s.charAt(start) == s.charAt(end)) {\n            count++;\n            start--;\n            end++;\n        }\n        \n        return count;\n    }\n")))}d.isMDXComponent=!0}}]);