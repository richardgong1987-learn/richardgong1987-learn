"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[1985],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),d=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(o.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=d(t),m=i,v=p["".concat(o,".").concat(m)]||p[m]||s[m]||l;return t?r.createElement(v,a(a({ref:n},c),{},{components:t})):r.createElement(v,a({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=p;var u={};for(var o in n)hasOwnProperty.call(n,o)&&(u[o]=n[o]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var d=2;d<l;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},88650:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return u},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var r=t(83117),i=t(80102),l=(t(67294),t(3905)),a=["components"],u={},o="\u7b2c\u4e00\u7ae0\uff1a\u6574\u6570",d={unversionedId:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter01",id:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter01",isDocsHomePage:!1,title:"\u7b2c\u4e00\u7ae0\uff1a\u6574\u6570",description:"\u9762\u8bd5\u98981\uff1a\u6574\u6570\u9664\u6cd5",source:"@site/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter01.md",sourceDirName:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main",slug:"/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter01",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter01",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter01.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u4e8c\u53c9\u6811",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/BinaryTree/readme"},next:{title:"\u7b2c\u4e8c\u7ae0\uff1a\u6570\u7ec4",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter02"}},c=[{value:"\u9762\u8bd5\u98981\uff1a\u6574\u6570\u9664\u6cd5",id:"\u9762\u8bd5\u98981\u6574\u6570\u9664\u6cd5",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801",children:[],level:3}],level:2},{value:"\u9762\u8bd5\u98982\uff1a\u4e8c\u8fdb\u5236\u52a0\u6cd5",id:"\u9762\u8bd5\u98982\u4e8c\u8fdb\u5236\u52a0\u6cd5",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-1",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-1",children:[],level:3}],level:2},{value:"\u9762\u8bd5\u98983\uff1a\u524dn\u4e2a\u6570\u5b57\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",id:"\u9762\u8bd5\u98983\u524dn\u4e2a\u6570\u5b57\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-2",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-2",children:[{value:"\u89e3\u6cd5\u4e00",id:"\u89e3\u6cd5\u4e00",children:[],level:4},{value:"\u89e3\u6cd5\u4e8c",id:"\u89e3\u6cd5\u4e8c",children:[],level:4},{value:"\u89e3\u6cd5\u4e09",id:"\u89e3\u6cd5\u4e09",children:[],level:4}],level:3}],level:2},{value:"\u9762\u8bd5\u98984\uff1a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57",id:"\u9762\u8bd5\u98984\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-3",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-3",children:[],level:3}],level:2},{value:"\u9762\u8bd5\u98985\uff1a\u5355\u8bcd\u957f\u5ea6\u7684\u6700\u5927\u4e58\u79ef",id:"\u9762\u8bd5\u98985\u5355\u8bcd\u957f\u5ea6\u7684\u6700\u5927\u4e58\u79ef",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-4",children:[],level:3},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-4",children:[],level:3}],level:2}],s={toc:c};function p(e){var n=e.components,t=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u7b2c\u4e00\u7ae0\u6574\u6570"},"\u7b2c\u4e00\u7ae0\uff1a\u6574\u6570"),(0,l.kt)("h2",{id:"\u9762\u8bd5\u98981\u6574\u6570\u9664\u6cd5"},"\u9762\u8bd5\u98981\uff1a\u6574\u6570\u9664\u6cd5"),(0,l.kt)("h3",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,l.kt)("p",null,"\u8f93\u5165\u4e24\u4e2aint\u578b\u6574\u6570\uff0c\u6c42\u5b83\u4eec\u9664\u6cd5\u7684\u5546\uff0c\u8981\u6c42\u4e0d\u5f97\u4f7f\u7528\u4e58\u53f7'*'\u3001\u9664\u53f7'/'\u4ee5\u53ca\u6c42\u4f59\u7b26\u53f7'%'\u3002\u5f53\u53d1\u751f\u6ea2\u51fa\u65f6\u8fd4\u56de\u6700\u5927\u7684\u6574\u6570\u503c\u3002\u5047\u8bbe\u9664\u6570\u4e0d\u4e3a0\u3002\u4f8b\u5982\uff0c\u8f93\u516515\u548c2\uff0c\u8f93\u51fa15/2\u7684\u7ed3\u679c\uff0c\u53737\u3002"),(0,l.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801"},"\u53c2\u8003\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public int divide(int dividend, int divisor) {\n    if (dividend == 0x80000000 && divisor == -1){\n        return Integer.MAX_VALUE;\n    }\n\n    int negative = 2;\n    if (dividend > 0) {\n        negative--;\n        dividend = -dividend;\n    }\n\n    if (divisor > 0) {\n        negative--;\n        divisor = -divisor;\n    }\n\n    int result = divideCore(dividend, divisor);\n    return negative == 1 ? -result : result;\n}\n\nprivate int divideCore(int dividend, int divisor) {\n    int result = 0;\n    while (dividend <= divisor) {\n        int value = divisor;\n        int quotient = 1;\n        while (value >= 0xc0000000 && dividend <= value + value) {\n            quotient += quotient;\n            value += value;\n        }\n\n        result += quotient;\n        dividend -= value;\n    }\n\n    return result;\n}\n")),(0,l.kt)("h2",{id:"\u9762\u8bd5\u98982\u4e8c\u8fdb\u5236\u52a0\u6cd5"},"\u9762\u8bd5\u98982\uff1a\u4e8c\u8fdb\u5236\u52a0\u6cd5"),(0,l.kt)("h3",{id:"\u9898\u76ee-1"},"\u9898\u76ee"),(0,l.kt)("p",null,'\u8f93\u5165\u4e24\u4e2a\u8868\u793a\u4e8c\u8fdb\u5236\u7684\u5b57\u7b26\u4e32\uff0c\u8bf7\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\uff0c\u5e76\u4ee5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8f93\u51fa\u3002\u4f8b\u5982\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u5206\u522b\u662f"11"\u548c"10"\uff0c\u5219\u8f93\u51fa"101"\u3002'),(0,l.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-1"},"\u53c2\u8003\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public String addBinary(String a, String b) {\n    StringBuilder result = new StringBuilder();\n    int i = a.length() - 1;\n    int j = b.length() - 1;\n    int carry = 0;\n    while (i >= 0 || j >= 0) {\n        int digitA = i >= 0 ? a.charAt(i--) - '0' : 0;\n        int digitB = j >= 0 ? b.charAt(j--) - '0' : 0;\n        int sum = digitA + digitB + carry;\n        carry = sum >= 2 ? 1 : 0;\n        sum = sum >= 2 ? sum - 2 : sum;\n        result.append(sum);\n    }\n\n    if (carry == 1) {\n        result.append(1);\n    }\n\n    return result.reverse().toString();\n}\n")),(0,l.kt)("h2",{id:"\u9762\u8bd5\u98983\u524dn\u4e2a\u6570\u5b57\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570"},"\u9762\u8bd5\u98983\uff1a\u524dn\u4e2a\u6570\u5b57\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570"),(0,l.kt)("h3",{id:"\u9898\u76ee-2"},"\u9898\u76ee"),(0,l.kt)("p",null,"\u8f93\u5165\u4e00\u4e2a\u975e\u8d1f\u6570n\uff0c\u8bf7\u8ba1\u7b970\u5230n\u4e4b\u95f4\u6bcf\u4e2a\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d1\u7684\u4e2a\u6570\uff0c\u5e76\u8f93\u51fa\u4e00\u4e2a\u6570\u7ec4\u3002\u4f8b\u5982\uff0c\u8f93\u5165n\u4e3a4\uff0c\u7531\u4e8e0\u30011\u30012\u30013\u30014\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u76841\u7684\u4e2a\u6570\u5206\u522b\u4e3a0\u30011\u30011\u30012\u30011\uff0c\u56e0\u6b64\u8f93\u51fa\u6570\u7ec4","[0, 1, 1, 2, 1]","\u3002"),(0,l.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-2"},"\u53c2\u8003\u4ee3\u7801"),(0,l.kt)("h4",{id:"\u89e3\u6cd5\u4e00"},"\u89e3\u6cd5\u4e00"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public int[] countBits(int num) {\n    int[] result = new int[num + 1];\n    for (int i = 0; i <= num; ++i) {\n        int count = 0;\n        int j = i;\n        while (j != 0) {\n            result[i]++;\n            j = j & (j - 1);\n        }\n    }\n\n    return result;\n}\n")),(0,l.kt)("h4",{id:"\u89e3\u6cd5\u4e8c"},"\u89e3\u6cd5\u4e8c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public int[] countBits(int num) {\n    int[] result = new int[num + 1];\n    for (int i = 1; i <= num; ++i) {\n        result[i] = result[i & (i - 1)] + 1;\n    }\n\n    return result;\n}\n")),(0,l.kt)("h4",{id:"\u89e3\u6cd5\u4e09"},"\u89e3\u6cd5\u4e09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public int[] countBits(int num) {\n    int[] result = new int[num + 1];\n    for (int i = 1; i <= num; ++i) {\n        result[i] = result[i >> 1] + (i & 1);\n    }\n\n    return result;\n}\n")),(0,l.kt)("h2",{id:"\u9762\u8bd5\u98984\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"},"\u9762\u8bd5\u98984\uff1a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"),(0,l.kt)("h3",{id:"\u9898\u76ee-3"},"\u9898\u76ee"),(0,l.kt)("p",null,"\u8f93\u5165\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u9664\u4e00\u4e2a\u6570\u5b57\u53ea\u51fa\u73b0\u4e00\u6b21\u4e4b\u5916\u5176\u4ed6\u6570\u5b57\u90fd\u51fa\u73b0\u4e09\u6b21\u3002\u8bf7\u627e\u51fa\u90a3\u4e2a\u552f\u4e00\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8f93\u5165\u7684\u6570\u7ec4\u4e3a","[0, 1, 0, 1, 0, 1, 100]","\uff0c\u5219\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u65f6100\u3002"),(0,l.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-3"},"\u53c2\u8003\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public int singleNumber(int[] nums) {\n    int[] bitSums = new int[32];\n    for (int num : nums) {\n        for (int i = 0; i < 32; i++) {\n            bitSums[i] += (num >> (31 - i)) & 1;\n        }\n    }\n\n    int result = 0;\n    for (int i = 0; i < 32; i++) {\n        result = (result << 1) + bitSums[i] % 3;\n    }\n\n    return result;\n}\n")),(0,l.kt)("h2",{id:"\u9762\u8bd5\u98985\u5355\u8bcd\u957f\u5ea6\u7684\u6700\u5927\u4e58\u79ef"},"\u9762\u8bd5\u98985\uff1a\u5355\u8bcd\u957f\u5ea6\u7684\u6700\u5927\u4e58\u79ef"),(0,l.kt)("h3",{id:"\u9898\u76ee-4"},"\u9898\u76ee"),(0,l.kt)("p",null,"\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4words\uff0c\u8bf7\u8ba1\u7b97\u5f53\u4e24\u4e2a\u5b57\u7b26\u4e32words","[i]","\u548cwords","[j]","\u4e0d\u5305\u542b\u76f8\u540c\u5b57\u7b26\u65f6\u5b83\u4eec\u957f\u5ea6\u7684\u4e58\u79ef\u7684\u6700\u5927\u503c\u3002\u5982\u679c\u6ca1\u6709\u4e0d\u5305\u542b\u76f8\u540c\u5b57\u7b26\u7684\u4e00\u5bf9\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u8fd4\u56de0\u3002\u5047\u8bbe\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u82f1\u8bed\u7684\u5c0f\u5199\u5b57\u6bcd\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6570\u7ec4words\u4e3a",'["abcw", "foo", "bar", "fxyz","abcdef"]','\uff0c\u6570\u7ec4\u4e2d\u7684\u5b57\u7b26\u4e32"bar"\u4e0e"foo"\u6ca1\u6709\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u5b83\u4eec\u957f\u5ea6\u7684\u4e58\u79ef\u4e3a9\u3002"abcw"\u4e0e" fxyz "\u4e5f\u6ca1\u6709\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u5b83\u4eec\u957f\u5ea6\u7684\u4e58\u79ef\u662f16\uff0c\u8fd9\u662f\u4e0d\u542b\u76f8\u540c\u5b57\u7b26\u7684\u4e00\u5bf9\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e58\u79ef\u7684\u6700\u5927\u503c\u3002'),(0,l.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-4"},"\u53c2\u8003\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public int maxProduct(String[] words) {\n    boolean[][] flags = new boolean[words.length][26];\n    for (int i = 0; i < words.length; i++) {\n        for(char c: words[i].toCharArray()) {\n            flags[i][c - 'a'] = true;\n        }\n    }\n\n    int result = 0;\n    for (int i = 0; i < words.length; i++) {\n        for (int j = i + 1; j < words.length; j++) {\n            int k = 0;\n            for (; k < 26; k++) {\n                if (flags[i][k] && flags[j][k]) {\n                    break;\n                }\n            }\n\n            if (k == 26) {\n                int prod = words[i].length() * words[j].length();\n                result = Math.max(result, prod);\n            }\n        }\n    }\n\n    return result;\n}\n")))}p.isMDXComponent=!0}}]);