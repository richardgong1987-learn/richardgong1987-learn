(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[4700],{3905:function(n,t,e){"use strict";e.d(t,{Zo:function(){return c},kt:function(){return d}});var r=e(67294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function o(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function i(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?o(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,r,a=function(n,t){if(null==n)return{};var e,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)e=o[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)e=o[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var u=r.createContext({}),p=function(n){var t=r.useContext(u),e=t;return n&&(e="function"==typeof n?n(t):i(i({},t),n)),e},c=function(n){var t=p(n.components);return r.createElement(u.Provider,{value:t},n.children)},s={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(n,t){var e=n.components,a=n.mdxType,o=n.originalType,u=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),m=p(e),d=a,g=m["".concat(u,".").concat(d)]||m[d]||s[d]||o;return e?r.createElement(g,i(i({ref:t},c),{},{components:e})):r.createElement(g,i({ref:t},c))}));function d(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var o=e.length,i=new Array(o);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=n,l.mdxType="string"==typeof n?n:a,i[1]=l;for(var p=2;p<o;p++)i[p]=e[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,e)}m.displayName="MDXCreateElement"},82996:function(n,t,e){"use strict";e.r(t),e.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=e(22122),a=e(19756),o=(e(67294),e(3905)),i=["components"],l={},u="2.18 \u9898\u76ee\u5343\u767e\u53d8\uff0c\u5957\u8def\u4e0d\u4f1a\u53d8",p={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u62a2\u623f\u5b50",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u62a2\u623f\u5b50",isDocsHomePage:!1,title:"2.18 \u9898\u76ee\u5343\u767e\u53d8\uff0c\u5957\u8def\u4e0d\u4f1a\u53d8",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u62a2\u623f\u5b50.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u62a2\u623f\u5b50",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u62a2\u623f\u5b50",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u62a2\u623f\u5b50.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.14 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u624e\u6c14\u7403\u95ee\u9898",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u624e\u6c14\u7403"},next:{title:"2.3 \u6700\u5927\u5b50\u6570\u7ec4\u95ee\u9898",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5927\u5b50\u6570\u7ec4"}},c=[{value:"2.18.1 \u7ebf\u6027\u6392\u5217\u60c5\u51b5",id:"2181-\u7ebf\u6027\u6392\u5217\u60c5\u51b5",children:[]},{value:"2.18.2 \u73af\u5f62\u6392\u5217\u60c5\u51b5",id:"2182-\u73af\u5f62\u6392\u5217\u60c5\u51b5",children:[]},{value:"2.18.3 \u6811\u5f62\u6392\u5217\u60c5\u51b5",id:"2183-\u6811\u5f62\u6392\u5217\u60c5\u51b5",children:[]}],s={toc:c};function m(n){var t=n.components,e=(0,a.Z)(n,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,e,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"218-\u9898\u76ee\u5343\u767e\u53d8\uff0c\u5957\u8def\u4e0d\u4f1a\u53d8"},"2.18 \u9898\u76ee\u5343\u767e\u53d8\uff0c\u5957\u8def\u4e0d\u4f1a\u53d8"),(0,o.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/house-robber"},"198.\u6253\u5bb6\u52ab\u820d")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/house-robber-ii"},"213.\u6253\u5bb6\u52ab\u820dII")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/house-robber-iii"},"337.\u6253\u5bb6\u52ab\u820dIII")),(0,o.kt)("h3",{id:"2181-\u7ebf\u6027\u6392\u5217\u60c5\u51b5"},"2.18.1 \u7ebf\u6027\u6392\u5217\u60c5\u51b5"),(0,o.kt)("p",null,"\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"int rob(int[] nums);\n")),(0,o.kt)("p",null,"\u7528\u5907\u5fd8\u5f55\u8fdb\u884c\u4f18\u5316\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"int[] memo;\n// \u4e3b\u51fd\u6570\nint rob(int[] nums) {\n    // \u521d\u59cb\u5316\u5907\u5fd8\u5f55\n    memo = new int[nums.length];\n    Arrays.fill(memo, -1);\n    // \u4ece\u7b2c 0 \u95f4\u623f\u5b50\u5f00\u59cb\u505a\u9009\u62e9\n    return dp(nums, 0);\n}\n\n// \u8fd4\u56de dp[start..] \u80fd\u53d6\u51fa\u7684\u6700\u591a\u91d1\u989d\nint dp(int[] nums, int start) {\n    if (start >= nums.length) {\n        return 0;\n    }\n    // \u907f\u514d\u91cd\u590d\u8ba1\u7b97\n    if (memo[start] != -1) return memo[start];\n    \n    int res = Math.max(dp(nums, start + 1), \n                    nums[start] + dp(nums, start + 2));\n    // \u8bb0\u5165\u5907\u5fd8\u5f55\n    memo[start] = res;\n    return res;\n}\n")),(0,o.kt)("p",null,"\u8fd9\u5c31\u662f\u81ea\u9876\u5411\u4e0b\u7684\u52a8\u6001\u89c4\u5212\u89e3\u6cd5\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7565\u4f5c\u4fee\u6539\uff0c\u5199\u51fa",(0,o.kt)("strong",{parentName:"p"},"\u81ea\u5e95\u5411\u4e0a"),"\u7684\u89e3\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"}," int rob(int[] nums) {\n    int n = nums.length;\n    // dp[i] = x \u8868\u793a\uff1a\n    // \u4ece\u7b2c i \u95f4\u623f\u5b50\u5f00\u59cb\u505a\u9009\u62e9\uff0c\u6700\u591a\u80fd\u53d6\u51fa\u7684\u94b1\u4e3a x\n    // base case: dp[n] = 0\n    int[] dp = new int[n + 2];\n    for (int i = n - 1; i >= 0; i--) {\n        dp[i] = Math.max(dp[i + 1], nums[i] + dp[i + 2]);\n    }\n    return dp[0];\n}\n")),(0,o.kt)("p",null,"\u6211\u4eec\u53c8\u53d1\u73b0\u72b6\u6001\u8f6c\u79fb\u53ea\u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"dp[i]")," \u6700\u8fd1\u7684\u4e24\u4e2a\u72b6\u6001 ",(0,o.kt)("inlineCode",{parentName:"p"},"dp[i+1]")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"dp[i+2]")," \u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u5c06\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230 O(1)\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"int rob(int[] nums) {\n    int n = nums.length;\n    // \u8bb0\u5f55 dp[i+1] \u548c dp[i+2]\n    int dp_i_1 = 0, dp_i_2 = 0;\n    // \u8bb0\u5f55 dp[i]\n    int dp_i = 0; \n    for (int i = n - 1; i >= 0; i--) {\n        dp_i = Math.max(dp_i_1, nums[i] + dp_i_2);\n        dp_i_2 = dp_i_1;\n        dp_i_1 = dp_i;\n    }\n    return dp_i;\n}\n")),(0,o.kt)("h3",{id:"2182-\u73af\u5f62\u6392\u5217\u60c5\u51b5"},"2.18.2 \u73af\u5f62\u6392\u5217\u60c5\u51b5"),(0,o.kt)("p",null,"\u53ea\u9700\u5bf9\u4e4b\u524d\u7684\u89e3\u6cd5\u7a0d\u4f5c\u4fee\u6539\u5373\u53ef\u5728\u8fd9\u9053\u9898\u4e2d\u590d\u7528\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"// \u4ec5\u8ba1\u7b97\u95ed\u533a\u95f4 [start,end] \u7684\u6700\u4f18\u7ed3\u679c\nint robRange(int[] nums, int start, int end) {\n    int n = nums.length;\n    int dp_i_1 = 0, dp_i_2 = 0;\n    int dp_i = 0;\n    for (int i = end; i >= start; i--) {\n        dp_i = Math.max(dp_i_1, nums[i] + dp_i_2);\n        dp_i_2 = dp_i_1;\n        dp_i_1 = dp_i;\n    }\n    return dp_i;\n}\n\n// \u8f93\u5165\u7684 nums \u6570\u7ec4\u89c6\u4e3a\u4e00\u4e2a\u73af\u5f62\u6570\u7ec4\nint rob(int[] nums) {\n    int n = nums.length;\n    if (n == 1) return nums[0];\n    return Math.max(robRange(nums, 0, n - 2), \n                    robRange(nums, 1, n - 1));\n}\n")),(0,o.kt)("h3",{id:"2183-\u6811\u5f62\u6392\u5217\u60c5\u51b5"},"2.18.3 \u6811\u5f62\u6392\u5217\u60c5\u51b5"),(0,o.kt)("p",null,"\u51fd\u6570\u7684\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"int rob(TreeNode root);\n")),(0,o.kt)("p",null,"\u6bd4\u5982\u8bf4\u8f93\u5165\u4e3a\u4e0b\u56fe\u8fd9\u6837\u4e00\u68f5\u4e8c\u53c9\u6811\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"     3\n    / \\\n   2   3\n    \\   \\ \n     3   1\n")),(0,o.kt)("p",null,"\u5982\u679c\u8f93\u5165\u4e3a\u4e0b\u56fe\u8fd9\u68f5\u4e8c\u53c9\u6811\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"     3\n    / \\\n   4   5\n  / \\   \\ \n 1   3   1\n")),(0,o.kt)("p",null,"\u6574\u4f53\u7684\u601d\u8def\u5b8c\u5168\u6ca1\u53d8\uff0c\u4f60\u8fd8\u662f\u5728\u505a\u300c\u53d6\u300d\u548c\u300c\u4e0d\u53d6\u300d\u7684\u9009\u62e9\uff0c\u53bb\u627e\u6536\u76ca\u8f83\u5927\u7684\u9009\u62e9\u5373\u53ef\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6309\u8fd9\u4e2a\u5957\u8def\u5199\u51fa\u4ee3\u7801\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"// \u5907\u5fd8\u5f55\uff0c\u8bb0\u5f55\u5728\u67d0\u4e2a\u8282\u70b9\u4e0a\u7684\u6700\u4f18\u9009\u62e9\nMap<TreeNode, Integer> memo = new HashMap<>();\n\nint rob(TreeNode root) {\n    if (root == null) return 0;\n    // \u5229\u7528\u5907\u5fd8\u5f55\u6d88\u9664\u91cd\u53e0\u5b50\u95ee\u9898\n    if (memo.containsKey(root)) \n        return memo.get(root);\n    // \u53d6\uff0c\u7136\u540e\u53bb\u4e0b\u4e0b\u5bb6\u505a\u9009\u62e9\n    int do_it = root.val\n        + (root.left == null ? \n            0 : rob(root.left.left) + rob(root.left.right))\n        + (root.right == null ? \n            0 : rob(root.right.left) + rob(root.right.right));\n    // \u4e0d\u53d6\uff0c\u7136\u540e\u53bb\u4e0b\u5bb6\u505a\u9009\u62e9\n    int not_do = rob(root.left) + rob(root.right);\n    // \u9009\u62e9\u6536\u76ca\u66f4\u5927\u7684\n    int res = Math.max(do_it, not_do);\n    memo.put(root, res);\n    return res;\n}\n")))}m.isMDXComponent=!0}}]);