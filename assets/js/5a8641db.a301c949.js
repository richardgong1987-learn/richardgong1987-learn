"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[9673],{3905:function(t,n,e){e.d(n,{Zo:function(){return p},kt:function(){return g}});var r=e(67294);function a(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function i(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function o(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?i(Object(e),!0).forEach((function(n){a(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function l(t,n){if(null==t)return{};var e,r,a=function(t,n){if(null==t)return{};var e,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)e=i[r],n.indexOf(e)>=0||(a[e]=t[e]);return a}(t,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)e=i[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var c=r.createContext({}),u=function(t){var n=r.useContext(c),e=n;return t&&(e="function"==typeof t?t(n):o(o({},n),t)),e},p=function(t){var n=u(t.components);return r.createElement(c.Provider,{value:n},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(t,n){var e=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),s=u(e),f=a,g=s["".concat(c,".").concat(f)]||s[f]||m[f]||i;return e?r.createElement(g,o(o({ref:n},p),{},{components:e})):r.createElement(g,o({ref:n},p))}));function g(t,n){var e=arguments,a=n&&n.mdxType;if("string"==typeof t||a){var i=e.length,o=new Array(i);o[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=t,l[s]="string"==typeof t?t:a,o[1]=l;for(var u=2;u<i;u++)o[u]=e[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}f.displayName="MDXCreateElement"},19106:function(t,n,e){e.r(n),e.d(n,{assets:function(){return c},contentTitle:function(){return o},default:function(){return s},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var r=e(83117),a=(e(67294),e(3905));const i={},o="5.3 \u5982\u4f55\u8fd0\u7528\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/koko\u5077\u9999\u8549",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/koko\u5077\u9999\u8549",title:"5.3 \u5982\u4f55\u8fd0\u7528\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/koko\u5077\u9999\u8549.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/koko\u5077\u9999\u8549",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/koko\u5077\u9999\u8549",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/koko\u5077\u9999\u8549.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3.1 \u624b\u628a\u624b\u6559\u4f60\u5199 LRU \u7f13\u5b58\u6dd8\u6c70\u7b97\u6cd5",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/LRU\u7b97\u6cd5"},next:{title:"3.11 \u79c0\u64cd\u4f5c\u4e4b k \u4e2a\u4e00\u7ec4\u53cd\u8f6c\u94fe\u8868",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/k\u4e2a\u4e00\u7ec4\u53cd\u8f6c\u94fe\u8868"}},c={},u=[],p={toc:u};function s(t){let{components:n,...e}=t;return(0,a.kt)("wrapper",(0,r.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"53-\u5982\u4f55\u8fd0\u7528\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5"},"5.3 \u5982\u4f55\u8fd0\u7528\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5"),(0,a.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/koko-eating-bananas"},"875.\u7231\u5403\u9999\u8549\u7684\u73c2\u73c2")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/capacity-to-ship-packages-within-d-days"},"1011.\u5728D\u5929\u5185\u9001\u8fbe\u5305\u88f9\u7684\u80fd\u529b")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u7231\u5403\u9999\u8549\u7684\u73c2\u73c2"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"int minEatingSpeed(int[] piles, int H) {\n    // \u5957\u7528\u641c\u7d22\u5de6\u4fa7\u8fb9\u754c\u7684\u7b97\u6cd5\u6846\u67b6\n    int left = 1, right = getMax(piles) + 1;\n    while (left < right) {\n        // \u9632\u6b62\u6ea2\u51fa\n        int mid = left + (right - left) / 2;\n        if (canFinish(piles, mid, H)) {\n            right = mid;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;\n}\n\n// \u65f6\u95f4\u590d\u6742\u5ea6 O(N)\nboolean canFinish(int[] piles, int speed, int H) {\n    int time = 0;\n    for (int n : piles) {\n        time += timeOf(n, speed);\n    }\n    return time <= H;\n}\n\n// \u4ee5 speed \u7684\u901f\u5ea6\u5403 n \u4e2a\u9999\u8549\uff0c\u8981\u591a\u4e45\uff1f\nint timeOf(int n, int speed) {\n    return (n / speed) + ((n % speed > 0) ? 1 : 0);\n}\n\n// \u8ba1\u7b97\u6570\u7ec4\u7684\u6700\u5927\u503c\nint getMax(int[] piles) {\n    int max = 0;\n    for (int n : piles)\n        max = Math.max(n, max);\n    return max;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u5728D\u5929\u5185\u9001\u8fbe\u5305\u88f9\u7684\u80fd\u529b"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// \u5bfb\u627e\u5de6\u4fa7\u8fb9\u754c\u7684\u4e8c\u5206\u67e5\u627e\nint shipWithinDays(int[] weights, int D) {\n    // \u8f7d\u91cd\u53ef\u80fd\u7684\u6700\u5c0f\u503c\n    int left = getMax(weights);\n    // \u8f7d\u91cd\u53ef\u80fd\u7684\u6700\u5927\u503c + 1\n    int right = getSum(weights) + 1;\n    while (left < right) {\n        int mid = left + (right - left) / 2;\n        if (canFinish(weights, D, mid)) {\n            right = mid;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;\n}\n\n// \u5982\u679c\u8f7d\u91cd\u4e3a cap\uff0c\u662f\u5426\u80fd\u5728 D \u5929\u5185\u8fd0\u5b8c\u8d27\u7269\uff1f\nboolean canFinish(int[] w, int D, int cap) {\n    int i = 0;\n    for (int day = 0; day < D; day++) {\n        int maxCap = cap;\n        while ((maxCap -= w[i]) >= 0) {\n            i++;\n            if (i == w.length)\n                return true;\n        }\n    }\n    return false;\n}\n")))}s.isMDXComponent=!0}}]);