"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[3663],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,g=m["".concat(u,".").concat(d)]||m[d]||s[d]||i;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},82899:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=t(83117),a=t(80102),i=(t(67294),t(3905)),o=["components"],l={},u="2.1 \u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217",c={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217",title:"2.1 \u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.11 \u4e0d\u540c\u7684\u5b9a\u4e49\u4ea7\u751f\u4e0d\u540c\u7684\u89e3\u6cd5",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u4e4b\u56db\u952e\u952e\u76d8"},next:{title:"1.2 \u52a8\u6001\u89c4\u5212\u89e3\u9898\u5957\u8def\u6846\u67b6",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u8be6\u89e3\u8fdb\u9636"}},p=[{value:"2.1.1 \u52a8\u6001\u89c4\u5212\u89e3\u6cd5",id:"211-\u52a8\u6001\u89c4\u5212\u89e3\u6cd5",children:[],level:3},{value:"2.1.2 \u4e8c\u5206\u67e5\u627e\u89e3\u6cd5",id:"212-\u4e8c\u5206\u67e5\u627e\u89e3\u6cd5",children:[],level:3}],s={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"21-\u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217"},"2.1 \u52a8\u6001\u89c4\u5212\u8bbe\u8ba1\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217"),(0,i.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/longest-increasing-subsequence"},"300.\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217")),(0,i.kt)("p",null,"\u9898\u76ee\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u8f93\u5165\u4e00\u4e2a\u65e0\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8bf7\u4f60\u627e\u5230\u5176\u4e2d\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"int lengthOfLIS(int[] nums);\n")),(0,i.kt)("h3",{id:"211-\u52a8\u6001\u89c4\u5212\u89e3\u6cd5"},"2.1.1 \u52a8\u6001\u89c4\u5212\u89e3\u6cd5"),(0,i.kt)("p",null,"\u5b8c\u6574\u4ee3\u7801\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"int lengthOfLIS(int[] nums) {\n    int[] dp = new int[nums.length];\n    // base case\uff1adp \u6570\u7ec4\u5168\u90fd\u521d\u59cb\u5316\u4e3a 1\n    Arrays.fill(dp, 1);\n    for (int i = 0; i < nums.length; i++) {\n        for (int j = 0; j < i; j++) {\n            if (nums[i] > nums[j]) \n                dp[i] = Math.max(dp[i], dp[j] + 1);\n        }\n    }\n    \n    int res = 0;\n    // \u8981\u91cd\u65b0\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u627e\u5230\u6700\u957f\u7684\u9012\u589e\u5b50\u5e8f\u5217\u957f\u5ea6\n    for (int i = 0; i < dp.length; i++) {\n        res = Math.max(res, dp[i]);\n    }\n    return res;\n}\n")),(0,i.kt)("h3",{id:"212-\u4e8c\u5206\u67e5\u627e\u89e3\u6cd5"},"2.1.2 \u4e8c\u5206\u67e5\u627e\u89e3\u6cd5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"int lengthOfLIS(int[] nums) {\n    int[] top = new int[nums.length];\n    // \u724c\u5806\u6570\u521d\u59cb\u5316\u4e3a 0\n    int piles = 0;\n    for (int i = 0; i < nums.length; i++) {\n        // \u8981\u5904\u7406\u7684\u6251\u514b\u724c\n        int poker = nums[i];\n\n        /***** \u641c\u7d22\u5de6\u4fa7\u8fb9\u754c\u7684\u4e8c\u5206\u67e5\u627e *****/\n        int left = 0, right = piles;\n        while (left < right) {\n            int mid = (left + right) / 2;\n            if (top[mid] > poker) {\n                right = mid;\n            } else if (top[mid] < poker) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        /******************************/\n        \n        // \u6ca1\u627e\u5230\u5408\u9002\u7684\u724c\u5806\uff0c\u65b0\u5efa\u4e00\u5806\n        if (left == piles) piles++;\n        // \u628a\u8fd9\u5f20\u724c\u653e\u5230\u724c\u5806\u9876\n        top[left] = poker;\n    }\n    // \u724c\u5806\u6570\u5c31\u662f LIS \u957f\u5ea6\n    return piles;\n}\n")))}m.isMDXComponent=!0}}]);