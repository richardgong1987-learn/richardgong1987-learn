(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[2139],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(t),d=i,f=c["".concat(l,".").concat(d)]||c[d]||m[d]||a;return t?r.createElement(f,u(u({ref:n},p),{},{components:t})):r.createElement(f,u({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,u=new Array(a);u[0]=c;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,u[1]=o;for(var s=2;s<a;s++)u[s]=t[s];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},56095:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var r=t(22122),i=t(19756),a=(t(67294),t(3905)),u=["components"],o={},l="\u7b2c\u4e5d\u7ae0\uff1a\u5806",s={unversionedId:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter09",id:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter09",isDocsHomePage:!1,title:"\u7b2c\u4e5d\u7ae0\uff1a\u5806",description:"\u9762\u8bd5\u989859\uff1a\u6570\u636e\u6d41\u7684\u7b2ck\u5927\u6570\u503c",source:"@site/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter09.md",sourceDirName:"c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main",slug:"/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter09",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter09",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter09.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u7b2c\u516b\u7ae0\uff1a\u6811",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter08"},next:{title:"\u7b2c\u5341\u7ae0\uff1a\u524d\u7f00\u6811",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/OfferOrientedAlgorithms-main/Chapter10"}},p=[{value:"\u9762\u8bd5\u989859\uff1a\u6570\u636e\u6d41\u7684\u7b2ck\u5927\u6570\u503c",id:"\u9762\u8bd5\u989859\uff1a\u6570\u636e\u6d41\u7684\u7b2ck\u5927\u6570\u503c",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[]},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801",children:[]}]},{value:"\u9762\u8bd5\u989860\uff1a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684k\u4e2a\u6570\u5b57",id:"\u9762\u8bd5\u989860\uff1a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684k\u4e2a\u6570\u5b57",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-1",children:[]},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-1",children:[]}]},{value:"\u9762\u8bd5\u989861\uff1a\u548c\u6700\u5c0f\u7684k\u4e2a\u6570\u5bf9",id:"\u9762\u8bd5\u989861\uff1a\u548c\u6700\u5c0f\u7684k\u4e2a\u6570\u5bf9",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee-2",children:[]},{value:"\u53c2\u8003\u4ee3\u7801",id:"\u53c2\u8003\u4ee3\u7801-2",children:[]}]}],m={toc:p};function c(e){var n=e.components,t=(0,i.Z)(e,u);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u7b2c\u4e5d\u7ae0\uff1a\u5806"},"\u7b2c\u4e5d\u7ae0\uff1a\u5806"),(0,a.kt)("h2",{id:"\u9762\u8bd5\u989859\uff1a\u6570\u636e\u6d41\u7684\u7b2ck\u5927\u6570\u503c"},"\u9762\u8bd5\u989859\uff1a\u6570\u636e\u6d41\u7684\u7b2ck\u5927\u6570\u503c"),(0,a.kt)("h3",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,a.kt)("p",null,"\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\u578bKthLarges\uff0c\u5b83\u6bcf\u6b21\u4ece\u4e00\u4e2a\u6570\u636e\u6d41\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u5f97\u51fa\u6570\u636e\u6d41\u5df2\u7ecf\u8bfb\u53d6\u7684\u6570\u5b57\u4e2d\u7b2ck\uff08k\u22651\uff09\u5927\u7684\u6570\u503c\u3002\u8be5\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u6574\u6570k\uff0c\u53e6\u4e00\u4e2a\u662f\u5305\u542b\u6570\u636e\u6d41\u4e2d\u6700\u5f00\u59cb\u6570\u503c\u7684\u6574\u6570\u6570\u7ec4nums\uff08\u5047\u8bbe\u6570\u7ec4nums\u7684\u957f\u5ea6\u5927\u4e8ek\uff09\u3002\u8be5\u7c7b\u578b\u8fd8\u6709\u4e00\u4e2a\u51fd\u6570add\u7528\u6765\u6dfb\u52a0\u6570\u636e\u6d41\u4e2d\u7684\u65b0\u6570\u503c\u5e76\u8fd4\u56de\u6570\u636e\u6d41\u4e2d\u5df2\u7ecf\u8bfb\u53d6\u7684\u6570\u5b57\u7684\u7b2ck\u5927\u6570\u503c\u3002"),(0,a.kt)("p",null,"\u4f8b\u5982\uff0c\u5f53k=3\u3001nums\u4e3a\u6570\u7ec4","[4, 5, 8, 2]","\u65f6\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570\u521b\u5efa\u9664\u7c7b\u578bKthLargest\u7684\u5b9e\u4f8b\u4e4b\u540e\uff0c\u7b2c\u4e00\u6b21\u8c03\u7528add\u51fd\u6570\u6dfb\u52a0\u6570\u5b573\uff0c\u6b64\u65f6\u5df2\u7ecf\u4ece\u6570\u636e\u6d41\u91cc\u8bfb\u53d6\u4e86\u6570\u503c4\u30015\u30018\u30012\u548c3\uff0c\u7b2c3\u5927\u7684\u6570\u503c\u662f4\uff1b\u7b2c\u4e8c\u6b21\u8c03\u7528add\u51fd\u6570\u6dfb\u52a0\u6570\u5b575\u65f6\uff0c\u5219\u8fd4\u56de\u7b2c3\u5927\u7684\u6570\u503c5\u3002"),(0,a.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801"},"\u53c2\u8003\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class KthLargest {\n    private PriorityQueue<Integer> minHeap;\n    private int size;\n\n    public KthLargest(int k, int[] nums) {\n        size = k;\n        minHeap = new PriorityQueue<>();\n        for (int num : nums) {\n            add(num);\n        }\n    }\n\n    public int add(int val) {\n        if (minHeap.size() < size) {\n            minHeap.offer(val);\n        } else if (val > minHeap.peek()) {\n            minHeap.poll();\n            minHeap.offer(val);\n        }\n\n        return minHeap.peek();\n    }\n}\n")),(0,a.kt)("h2",{id:"\u9762\u8bd5\u989860\uff1a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684k\u4e2a\u6570\u5b57"},"\u9762\u8bd5\u989860\uff1a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684k\u4e2a\u6570\u5b57"),(0,a.kt)("h3",{id:"\u9898\u76ee-1"},"\u9898\u76ee"),(0,a.kt)("p",null,"\u8bf7\u627e\u51fa\u6570\u7ec4\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684k\u4e2a\u6570\u5b57\u3002\u4f8b\u5982\u5f53k\u7b49\u4e8e2\u65f6\u8f93\u5165\u6570\u7ec4","[1, 2, 2, 1, 3, 1]","\uff0c\u7531\u4e8e\u6570\u5b571\u51fa\u73b03\u6b21\uff0c\u6570\u5b572\u51fa\u73b02\u6b21\uff0c\u6570\u5b573\u51fa\u73b01\uff0c\u90a3\u4e48\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u76842\u4e2a\u6570\u5b57\u65f61\u548c2\u3002"),(0,a.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-1"},"\u53c2\u8003\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public int[] topKFrequent(int[] nums, int k) {\n    Map<Integer, Integer> numToCount = new HashMap<>();\n    for (int num : nums) {\n        numToCount.put(num, numToCount.getOrDefault(num, 0) + 1);\n    }\n\n    Queue<Map.Entry<Integer, Integer>> minHeap = new PriorityQueue<>(\n        (e1, e2) -> e1.getValue() - e2.getValue());\n    for (Map.Entry<Integer, Integer> entry : numToCount.entrySet()) {\n        if (minHeap.size() < k) {\n            minHeap.offer(entry);\n        } else {\n            if (entry.getValue() > minHeap.peek().getValue()) {\n                minHeap.poll();\n                minHeap.offer(entry);\n            }\n        }\n    }\n\n    int[] result = new int[k];\n    for (int i = k - 1; i >= 0; i--) {\n        result[i] = minHeap.poll().getKey();\n    }\n\n    return result;\n}\n")),(0,a.kt)("h2",{id:"\u9762\u8bd5\u989861\uff1a\u548c\u6700\u5c0f\u7684k\u4e2a\u6570\u5bf9"},"\u9762\u8bd5\u989861\uff1a\u548c\u6700\u5c0f\u7684k\u4e2a\u6570\u5bf9"),(0,a.kt)("h3",{id:"\u9898\u76ee-2"},"\u9898\u76ee"),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e24\u4e2a\u9012\u589e\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u5206\u522b\u4ece\u4e24\u4e2a\u6570\u7ec4\u4e2d\u5404\u53d6\u4e00\u4e2a\u6570\u5b57u\u3001v\u5f62\u6210\u4e00\u4e2a\u6570\u5bf9(u, v)\uff0c\u8bf7\u627e\u51fa\u548c\u6700\u5c0f\u7684k\u4e2a\u6570\u5bf9\u3002\u4f8b\u5982\u8f93\u5165\u4e24\u4e2a\u6570\u7ec4","[1, 5, 13, 21]","\u548c","[2, 4, 9, 15]","\uff0c\u548c\u6700\u5c0f\u76843\u4e2a\u6570\u5bf9\u4e3a(1, 2)\u3001(1, 4)\u548c(2, 5)\u3002"),(0,a.kt)("h3",{id:"\u53c2\u8003\u4ee3\u7801-2"},"\u53c2\u8003\u4ee3\u7801"),(0,a.kt)("h4",{id:"\u89e3\u6cd5\u4e00"},"\u89e3\u6cd5\u4e00"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public List<List<Integer>> kSmallestPairs(int[] nums1,\n    int[] nums2, int k) {\n    Queue<int[]> maxHeap = new PriorityQueue<>((p1, p2)\n        -> p2[0] + p2[1] - p1[0] - p1[1]);\n    for (int i = 0; i < Math.min(k, nums1.length); ++i) {\n        for (int j = 0; j < Math.min(k, nums2.length); ++j) {\n            if (maxHeap.size() >= k) {\n                int[] root = maxHeap.peek();\n                if (root[0] + root[1] > nums1[i] + nums2[j]) {\n                    maxHeap.poll();\n                    maxHeap.offer(new int[] {nums1[i], nums2[j]});\n                }\n            } else {\n                maxHeap.offer(new int[] {nums1[i], nums2[j]});\n            }\n        }\n    }\n\n    List<List<Integer>> result = new LinkedList<>();\n    while (!maxHeap.isEmpty()) {\n        int[] vals = maxHeap.poll();\n        result.add(Arrays.asList(vals[0], vals[1]));\n    }\n\n    return result;\n}\n")),(0,a.kt)("h4",{id:"\u89e3\u6cd5\u4e8c"},"\u89e3\u6cd5\u4e8c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public List<List<Integer>> kSmallestPairs(int[] nums1,\n    int[] nums2, int k) {\n    Queue<int[]> minHeap = new PriorityQueue<>((p1, p2)\n        -> nums1[p1[0]] + nums2[p1[1]] - nums1[p2[0]] - nums2[p2[1]]);\n    if (nums2.length > 0) {\n        for (int i = 0; i < Math.min(k, nums1.length); ++i) {\n            minHeap.offer(new int[] {i, 0});\n        }\n    }\n\n    List<List<Integer>> result = new ArrayList<>();        \n    while (k-- > 0 && !minHeap.isEmpty()) {\n        int[] ids = minHeap.poll();\n        result.add(Arrays.asList(nums1[ids[0]], nums2[ids[1]]));\n\n        if (ids[1] < nums2.length - 1) {\n            minHeap.offer(new int[] {ids[0], ids[1] + 1});\n        }\n    }\n\n    return result;\n}\n")))}c.isMDXComponent=!0}}]);