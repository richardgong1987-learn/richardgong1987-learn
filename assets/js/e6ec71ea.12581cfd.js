"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[8213],{3905:function(n,r,e){e.d(r,{Zo:function(){return s},kt:function(){return m}});var t=e(67294);function o(n,r,e){return r in n?Object.defineProperty(n,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[r]=e,n}function a(n,r){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(n,r).enumerable}))),e.push.apply(e,t)}return e}function c(n){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?a(Object(e),!0).forEach((function(r){o(n,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(r){Object.defineProperty(n,r,Object.getOwnPropertyDescriptor(e,r))}))}return n}function i(n,r){if(null==n)return{};var e,t,o=function(n,r){if(null==n)return{};var e,t,o={},a=Object.keys(n);for(t=0;t<a.length;t++)e=a[t],r.indexOf(e)>=0||(o[e]=n[e]);return o}(n,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(t=0;t<a.length;t++)e=a[t],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(o[e]=n[e])}return o}var u=t.createContext({}),l=function(n){var r=t.useContext(u),e=r;return n&&(e="function"==typeof n?n(r):c(c({},r),n)),e},s=function(n){var r=l(n.components);return t.createElement(u.Provider,{value:r},n.children)},d={inlineCode:"code",wrapper:function(n){var r=n.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(n,r){var e=n.components,o=n.mdxType,a=n.originalType,u=n.parentName,s=i(n,["components","mdxType","originalType","parentName"]),p=l(e),m=o,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return e?t.createElement(f,c(c({ref:r},s),{},{components:e})):t.createElement(f,c({ref:r},s))}));function m(n,r){var e=arguments,o=r&&r.mdxType;if("string"==typeof n||o){var a=e.length,c=new Array(a);c[0]=p;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=n,i.mdxType="string"==typeof n?n:o,c[1]=i;for(var l=2;l<a;l++)c[l]=e[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,e)}p.displayName="MDXCreateElement"},5960:function(n,r,e){e.r(r),e.d(r,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var t=e(83117),o=e(80102),a=(e(67294),e(3905)),c=["components"],i={},u="1.3 \u56de\u6eaf\u7b97\u6cd5\u89e3\u9898\u5957\u8def\u6846\u67b6",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u56de\u6eaf\u7b97\u6cd5\u8be6\u89e3\u4fee\u8ba2\u7248",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u56de\u6eaf\u7b97\u6cd5\u8be6\u89e3\u4fee\u8ba2\u7248",isDocsHomePage:!1,title:"1.3 \u56de\u6eaf\u7b97\u6cd5\u89e3\u9898\u5957\u8def\u6846\u67b6",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u56de\u6eaf\u7b97\u6cd5\u8be6\u89e3\u4fee\u8ba2\u7248.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u56de\u6eaf\u7b97\u6cd5\u8be6\u89e3\u4fee\u8ba2\u7248",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u56de\u6eaf\u7b97\u6cd5\u8be6\u89e3\u4fee\u8ba2\u7248",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u56de\u6eaf\u7b97\u6cd5\u8be6\u89e3\u4fee\u8ba2\u7248.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"4.3 \u56de\u6eaf\u7b97\u6cd5\u6700\u4f73\u5b9e\u8df5\uff1a\u62ec\u53f7\u751f\u6210",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u5408\u6cd5\u62ec\u53f7\u751f\u6210"},next:{title:"1.7 \u6211\u5199\u4e86\u4e00\u4e2a\u6a21\u677f\uff0c\u628a\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\u53d8\u6210\u4e86\u9ed8\u5199\u9898",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u6ed1\u52a8\u7a97\u53e3\u6280\u5de7\u8fdb\u9636"}},s=[{value:"1.3.1 \u5168\u6392\u5217\u95ee\u9898",id:"131-\u5168\u6392\u5217\u95ee\u9898",children:[],level:3},{value:"1.3.2 N \u7687\u540e\u95ee\u9898",id:"132-n-\u7687\u540e\u95ee\u9898",children:[],level:3}],d={toc:s};function p(n){var r=n.components,e=(0,o.Z)(n,c);return(0,a.kt)("wrapper",(0,t.Z)({},d,e,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"13-\u56de\u6eaf\u7b97\u6cd5\u89e3\u9898\u5957\u8def\u6846\u67b6"},"1.3 \u56de\u6eaf\u7b97\u6cd5\u89e3\u9898\u5957\u8def\u6846\u67b6"),(0,a.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/permutations"},"46.\u5168\u6392\u5217")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/n-queens"},"51.N\u7687\u540e")),(0,a.kt)("p",null,"\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"result = []\ndef backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868):\n    if \u6ee1\u8db3\u7ed3\u675f\u6761\u4ef6:\n        result.add(\u8def\u5f84)\n        return\n    \n    for \u9009\u62e9 in \u9009\u62e9\u5217\u8868:\n        \u505a\u9009\u62e9\n        backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868)\n        \u64a4\u9500\u9009\u62e9\n")),(0,a.kt)("h3",{id:"131-\u5168\u6392\u5217\u95ee\u9898"},"1.3.1 \u5168\u6392\u5217\u95ee\u9898"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"List<List<Integer>> res = new LinkedList<>();\n\n/* \u4e3b\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u7ec4\u4e0d\u91cd\u590d\u7684\u6570\u5b57\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u5168\u6392\u5217 */\nList<List<Integer>> permute(int[] nums) {\n    // \u8bb0\u5f55\u300c\u8def\u5f84\u300d\n    LinkedList<Integer> track = new LinkedList<>();\n    backtrack(nums, track);\n    return res;\n}\n\n// \u8def\u5f84\uff1a\u8bb0\u5f55\u5728 track \u4e2d\n// \u9009\u62e9\u5217\u8868\uff1anums \u4e2d\u4e0d\u5b58\u5728\u4e8e track \u7684\u90a3\u4e9b\u5143\u7d20\n// \u7ed3\u675f\u6761\u4ef6\uff1anums \u4e2d\u7684\u5143\u7d20\u5168\u90fd\u5728 track \u4e2d\u51fa\u73b0\nvoid backtrack(int[] nums, LinkedList<Integer> track) {\n    // \u89e6\u53d1\u7ed3\u675f\u6761\u4ef6\n    if (track.size() == nums.length) {\n        res.add(new LinkedList(track));\n        return;\n    }\n    \n    for (int i = 0; i < nums.length; i++) {\n        // \u6392\u9664\u4e0d\u5408\u6cd5\u7684\u9009\u62e9\n        if (track.contains(nums[i]))\n            continue;\n        // \u505a\u9009\u62e9\n        track.add(nums[i]);\n        // \u8fdb\u5165\u4e0b\u4e00\u5c42\u51b3\u7b56\u6811\n        backtrack(nums, track);\n        // \u53d6\u6d88\u9009\u62e9\n        track.removeLast();\n    }\n}\n")),(0,a.kt)("h3",{id:"132-n-\u7687\u540e\u95ee\u9898"},"1.3.2 N \u7687\u540e\u95ee\u9898"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<vector<string>> res;\n\n/* \u8f93\u5165\u68cb\u76d8\u8fb9\u957f n\uff0c\u8fd4\u56de\u6240\u6709\u5408\u6cd5\u7684\u653e\u7f6e */\nvector<vector<string>> solveNQueens(int n) {\n    // '.' \u8868\u793a\u7a7a\uff0c'Q' \u8868\u793a\u7687\u540e\uff0c\u521d\u59cb\u5316\u7a7a\u68cb\u76d8\u3002\n    vector<string> board(n, string(n, '.'));\n    backtrack(board, 0);\n    return res;\n}\n\n// \u8def\u5f84\uff1aboard \u4e2d\u5c0f\u4e8e row \u7684\u90a3\u4e9b\u884c\u90fd\u5df2\u7ecf\u6210\u529f\u653e\u7f6e\u4e86\u7687\u540e\n// \u9009\u62e9\u5217\u8868\uff1a\u7b2c row \u884c\u7684\u6240\u6709\u5217\u90fd\u662f\u653e\u7f6e\u7687\u540e\u7684\u9009\u62e9\n// \u7ed3\u675f\u6761\u4ef6\uff1arow \u8d85\u8fc7 board \u7684\u6700\u540e\u4e00\u884c\uff0c\u8bf4\u660e\u68cb\u76d8\u653e\u6ee1\u4e86\nvoid backtrack(vector<string>& board, int row) {\n    // \u89e6\u53d1\u7ed3\u675f\u6761\u4ef6\n    if (row == board.size()) {\n        res.push_back(board);\n        return;\n    }\n    int n = board[row].size();\n    for (int col = 0; col < n; col++) {\n        // \u6392\u9664\u4e0d\u5408\u6cd5\u9009\u62e9\n        if (!isValid(board, row, col)) \n            continue;\n        // \u505a\u9009\u62e9\n        board[row][col] = 'Q';\n        // \u8fdb\u5165\u4e0b\u4e00\u884c\u51b3\u7b56\n        backtrack(board, row + 1);\n        // \u64a4\u9500\u9009\u62e9\n        board[row][col] = '.';\n    }\n}\n\n/* \u662f\u5426\u53ef\u4ee5\u5728 board[row][col] \u653e\u7f6e\u7687\u540e\uff1f */\nbool isValid(vector<string>& board, int row, int col) {\n    int n = board.size();\n    // \u68c0\u67e5\u5217\u662f\u5426\u6709\u7687\u540e\u4e92\u76f8\u51b2\u7a81\n    for (int i = 0; i < row; i++) {\n        if (board[i][col] == 'Q')\n            return false;\n    }\n    // \u68c0\u67e5\u53f3\u4e0a\u65b9\u662f\u5426\u6709\u7687\u540e\u4e92\u76f8\u51b2\u7a81\n    for (int i = row - 1, j = col + 1; \n            i >= 0 && j < n; i--, j++) {\n        if (board[i][j] == 'Q')\n            return false;\n    }\n    // \u68c0\u67e5\u5de6\u4e0a\u65b9\u662f\u5426\u6709\u7687\u540e\u4e92\u76f8\u51b2\u7a81\n    for (int i = row - 1, j = col - 1;\n            i >= 0 && j >= 0; i--, j--) {\n        if (board[i][j] == 'Q')\n            return false;\n    }\n    return true;\n}\n")))}p.isMDXComponent=!0}}]);