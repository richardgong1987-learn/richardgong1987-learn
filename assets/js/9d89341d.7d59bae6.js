"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[9958],{3905:function(n,e,t){t.d(e,{Zo:function(){return l},kt:function(){return g}});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function u(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?u(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},u=Object.keys(n);for(r=0;r<u.length;r++)t=u[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(n);for(r=0;r<u.length;r++)t=u[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var c=r.createContext({}),s=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},l=function(n){var e=s(n.components);return r.createElement(c.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,u=n.originalType,c=n.parentName,l=i(n,["components","mdxType","originalType","parentName"]),p=s(t),g=a,f=p["".concat(c,".").concat(g)]||p[g]||m[g]||u;return t?r.createElement(f,o(o({ref:e},l),{},{components:t})):r.createElement(f,o({ref:e},l))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var u=t.length,o=new Array(u);o[0]=p;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=n,i.mdxType="string"==typeof n?n:a,o[1]=i;for(var s=2;s<u;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},69558:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return p}});var r=t(83117),a=t(80102),u=(t(67294),t(3905)),o=["components"],i={},c="4.9 \u524d\u7f00\u548c\u6280\u5de7\u89e3\u51b3\u5b50\u6570\u7ec4\u95ee\u9898",s={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u524d\u7f00\u548c\u6280\u5de7",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u524d\u7f00\u548c\u6280\u5de7",title:"4.9 \u524d\u7f00\u548c\u6280\u5de7\u89e3\u51b3\u5b50\u6570\u7ec4\u95ee\u9898",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u524d\u7f00\u548c\u6280\u5de7.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u524d\u7f00\u548c\u6280\u5de7",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u524d\u7f00\u548c\u6280\u5de7",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u524d\u7f00\u548c\u6280\u5de7.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3.6 Git \u539f\u7406\u4e4b\u4e8c\u53c9\u6811\u6700\u8fd1\u516c\u5171\u7956\u5148",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u516c\u5171\u7956\u5148"},next:{title:"1.5 \u53cc\u6307\u9488\u6280\u5de7\u5957\u8def\u6846\u67b6",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u53cc\u6307\u9488\u6280\u5de7"}},l=[],m={toc:l};function p(n){var e=n.components,t=(0,a.Z)(n,o);return(0,u.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,u.kt)("h1",{id:"49-\u524d\u7f00\u548c\u6280\u5de7\u89e3\u51b3\u5b50\u6570\u7ec4\u95ee\u9898"},"4.9 \u524d\u7f00\u548c\u6280\u5de7\u89e3\u51b3\u5b50\u6570\u7ec4\u95ee\u9898"),(0,u.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,u.kt)("p",null,(0,u.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/subarray-sum-equals-k"},"560.\u548c\u4e3aK\u7684\u5b50\u6570\u7ec4")),(0,u.kt)("p",null,(0,u.kt)("strong",{parentName:"p"},"\u4e00\u822c\u89e3\u6cd5"),"\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-java"},"int subarraySum(int[] nums, int k) {\n    int n = nums.length;\n    // \u6784\u9020\u524d\u7f00\u548c\n    int[] sum = new int[n + 1];\n    sum[0] = 0; \n    for (int i = 0; i < n; i++)\n        sum[i + 1] = sum[i] + nums[i];\n    \n    int ans = 0;\n    // \u7a77\u4e3e\u6240\u6709\u5b50\u6570\u7ec4\n    for (int i = 1; i <= n; i++)\n        for (int j = 0; j < i; j++)\n            // sum of nums[j..i-1]\n            if (sum[i] - sum[j] == k)\n                ans++;\n\n    return ans;\n}\n")),(0,u.kt)("p",null,(0,u.kt)("strong",{parentName:"p"},"\u4f18\u5316\u89e3\u6cd5"),"\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-java"},"int subarraySum(int[] nums, int k) {\n    int n = nums.length;\n    // map\uff1a\u524d\u7f00\u548c -> \u8be5\u524d\u7f00\u548c\u51fa\u73b0\u7684\u6b21\u6570\n    HashMap<Integer, Integer> \n        preSum = new HashMap<>();\n    // base case\n    preSum.put(0, 1);\n\n    int ans = 0, sum0_i = 0;\n    for (int i = 0; i < n; i++) {\n        sum0_i += nums[i];\n        // \u8fd9\u662f\u6211\u4eec\u60f3\u627e\u7684\u524d\u7f00\u548c nums[0..j]\n        int sum0_j = sum0_i - k;\n        // \u5982\u679c\u524d\u9762\u6709\u8fd9\u4e2a\u524d\u7f00\u548c\uff0c\u5219\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\n        if (preSum.containsKey(sum0_j))\n            ans += preSum.get(sum0_j);\n        // \u628a\u524d\u7f00\u548c nums[0..i] \u52a0\u5165\u5e76\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\n        preSum.put(sum0_i, \n            preSum.getOrDefault(sum0_i, 0) + 1);\n    }\n    return ans;\n}\n")))}p.isMDXComponent=!0}}]);