"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[8081],{3905:function(n,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var e=r(67294);function o(n,t,r){return t in n?Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[t]=r,n}function i(n,t){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);t&&(e=e.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),r.push.apply(r,e)}return r}function a(n){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(n,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(r,t))}))}return n}function c(n,t){if(null==n)return{};var r,e,o=function(n,t){if(null==n)return{};var r,e,o={},i=Object.keys(n);for(e=0;e<i.length;e++)r=i[e],t.indexOf(r)>=0||(o[r]=n[r]);return o}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(e=0;e<i.length;e++)r=i[e],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(o[r]=n[r])}return o}var u=e.createContext({}),l=function(n){var t=e.useContext(u),r=t;return n&&(r="function"==typeof n?n(t):a(a({},t),n)),r},p=function(n){var t=l(n.components);return e.createElement(u.Provider,{value:t},n.children)},s={inlineCode:"code",wrapper:function(n){var t=n.children;return e.createElement(e.Fragment,{},t)}},d=e.forwardRef((function(n,t){var r=n.components,o=n.mdxType,i=n.originalType,u=n.parentName,p=c(n,["components","mdxType","originalType","parentName"]),d=l(r),f=o,m=d["".concat(u,".").concat(f)]||d[f]||s[f]||i;return r?e.createElement(m,a(a({ref:t},p),{},{components:r})):e.createElement(m,a({ref:t},p))}));function f(n,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof n||o){var i=r.length,a=new Array(i);a[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=n,c.mdxType="string"==typeof n?n:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return e.createElement.apply(null,a)}return e.createElement.apply(null,r)}d.displayName="MDXCreateElement"},34573:function(n,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var e=r(83117),o=r(80102),i=(r(67294),r(3905)),a=["components"],c={},u="5.11 Union-Find\u7b97\u6cd5\u8be6\u89e3",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/UnionFind\u7b97\u6cd5\u8be6\u89e3",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/UnionFind\u7b97\u6cd5\u8be6\u89e3",title:"5.11 Union-Find\u7b97\u6cd5\u8be6\u89e3",description:"\u5b8c\u6574\u4ee3\u7801\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/UnionFind\u7b97\u6cd5\u8be6\u89e3.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/UnionFind\u7b97\u6cd5\u8be6\u89e3",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/UnionFind\u7b97\u6cd5\u8be6\u89e3",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/UnionFind\u7b97\u6cd5\u8be6\u89e3.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"5.12 Union-Find\u7b97\u6cd5\u5e94\u7528",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/UnionFind\u7b97\u6cd5\u5e94\u7528"},next:{title:"4.6 \u4e00\u4e2a\u51fd\u6570\u89e3\u51b3 nSum \u95ee\u9898",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/nSum"}},p=[],s={toc:p};function d(n){var t=n.components,r=(0,o.Z)(n,a);return(0,i.kt)("wrapper",(0,e.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"511-union-find\u7b97\u6cd5\u8be6\u89e3"},"5.11 Union-Find\u7b97\u6cd5\u8be6\u89e3"),(0,i.kt)("p",null,"\u5b8c\u6574\u4ee3\u7801\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class UnionFind {\n    // \u8fde\u901a\u5206\u91cf\u4e2a\u6570\n    private int count;\n    // \u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\n    private int[] parent;\n    // \u8bb0\u5f55\u6bcf\u68f5\u6811\u7684\u300c\u91cd\u91cf\u300d\n    private int[] size;\n\n    public UnionFind(int n) {\n        this.count = n;\n        parent = new int[n];\n        size = new int[n];\n        for (int i = 0; i < n; i++) {\n            parent[i] = i;\n            size[i] = 1;\n        }\n    }\n    \n    public void union(int p, int q) {\n        int rootP = find(p);\n        int rootQ = find(q);\n        if (rootP == rootQ)\n            return;\n        \n        // \u5c0f\u6811\u63a5\u5230\u5927\u6811\u4e0b\u9762\uff0c\u8f83\u5e73\u8861\n        if (size[rootP] > size[rootQ]) {\n            parent[rootQ] = rootP;\n            size[rootP] += size[rootQ];\n        } else {\n            parent[rootP] = rootQ;\n            size[rootQ] += size[rootP];\n        }\n        count--;\n    }\n\n    public boolean connected(int p, int q) {\n        int rootP = find(p);\n        int rootQ = find(q);\n        return rootP == rootQ;\n    }\n\n    private int find(int x) {\n        while (parent[x] != x) {\n            // \u8fdb\u884c\u8def\u5f84\u538b\u7f29\n            parent[x] = parent[parent[x]];\n            x = parent[x];\n        }\n        return x;\n    }\n\n    public int count() {\n        return count;\n    }\n}\n")))}d.isMDXComponent=!0}}]);