"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[9348],{3905:function(t,n,e){e.d(n,{Zo:function(){return m},kt:function(){return h}});var r=e(67294);function a(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function i(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function o(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?i(Object(e),!0).forEach((function(n){a(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function l(t,n){if(null==t)return{};var e,r,a=function(t,n){if(null==t)return{};var e,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)e=i[r],n.indexOf(e)>=0||(a[e]=t[e]);return a}(t,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)e=i[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var c=r.createContext({}),u=function(t){var n=r.useContext(c),e=n;return t&&(e="function"==typeof t?t(n):o(o({},n),t)),e},m=function(t){var n=u(t.components);return r.createElement(c.Provider,{value:n},t.children)},p="mdxType",s={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(t,n){var e=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),p=u(e),g=a,h=p["".concat(c,".").concat(g)]||p[g]||s[g]||i;return e?r.createElement(h,o(o({ref:n},m),{},{components:e})):r.createElement(h,o({ref:n},m))}));function h(t,n){var e=arguments,a=n&&n.mdxType;if("string"==typeof t||a){var i=e.length,o=new Array(i);o[0]=g;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=t,l[p]="string"==typeof t?t:a,o[1]=l;for(var u=2;u<i;u++)o[u]=e[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}g.displayName="MDXCreateElement"},50896:function(t,n,e){e.r(n),e.d(n,{assets:function(){return c},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var r=e(83117),a=(e(67294),e(3905));const i={},o="5.4 \u5982\u4f55\u9ad8\u6548\u89e3\u51b3\u63a5\u96e8\u6c34\u95ee\u9898",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u63a5\u96e8\u6c34",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u63a5\u96e8\u6c34",title:"5.4 \u5982\u4f55\u9ad8\u6548\u89e3\u51b3\u63a5\u96e8\u6c34\u95ee\u9898",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u63a5\u96e8\u6c34.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u63a5\u96e8\u6c34",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u63a5\u96e8\u6c34",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u63a5\u96e8\u6c34.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"5.10 \u5982\u4f55\u9ad8\u6548\u5bfb\u627e\u7d20\u6570",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u6253\u5370\u7d20\u6570"},next:{title:"5.6 \u5982\u4f55\u5bfb\u627e\u6700\u957f\u56de\u6587\u5b50\u4e32",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u6700\u957f\u56de\u6587\u5b50\u4e32"}},c={},u=[{value:"5.4.1 \u6838\u5fc3\u601d\u8def",id:"541-\u6838\u5fc3\u601d\u8def",level:3},{value:"5.4.2 \u5907\u5fd8\u5f55\u4f18\u5316",id:"542-\u5907\u5fd8\u5f55\u4f18\u5316",level:3},{value:"5.4.3 \u53cc\u6307\u9488\u89e3\u6cd5",id:"543-\u53cc\u6307\u9488\u89e3\u6cd5",level:3}],m={toc:u};function p(t){let{components:n,...e}=t;return(0,a.kt)("wrapper",(0,r.Z)({},m,e,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"54-\u5982\u4f55\u9ad8\u6548\u89e3\u51b3\u63a5\u96e8\u6c34\u95ee\u9898"},"5.4 \u5982\u4f55\u9ad8\u6548\u89e3\u51b3\u63a5\u96e8\u6c34\u95ee\u9898"),(0,a.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/trapping-rain-water"},"42.\u63a5\u96e8\u6c34")),(0,a.kt)("p",null,"\u8bf4\u767d\u4e86\u5c31\u662f\u7528\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u4e00\u4e2a\u6761\u5f62\u56fe\uff0c\u95ee\u4f60\u8fd9\u4e2a\u6761\u5f62\u56fe\u6700\u591a\u80fd\u63a5\u591a\u5c11\u6c34\uff0c\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"int trap(int[] height);\n")),(0,a.kt)("h3",{id:"541-\u6838\u5fc3\u601d\u8def"},"5.4.1 \u6838\u5fc3\u601d\u8def"),(0,a.kt)("p",null,"\u66b4\u529b\u7b97\u6cd5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int trap(vector<int>& height) {\n    int n = height.size();\n    int ans = 0;\n    for (int i = 1; i < n - 1; i++) {\n        int l_max = 0, r_max = 0;\n        // \u627e\u53f3\u8fb9\u6700\u9ad8\u7684\u67f1\u5b50\n        for (int j = i; j < n; j++)\n            r_max = max(r_max, height[j]);\n        // \u627e\u5de6\u8fb9\u6700\u9ad8\u7684\u67f1\u5b50\n        for (int j = i; j >= 0; j--)\n            l_max = max(l_max, height[j]);\n        // \u8ba1\u7b97\u80fd\u591f\u88c5\u7684\u6c34\n        ans += min(l_max, r_max) - height[i];\n    }\n    return ans;\n}\n")),(0,a.kt)("h3",{id:"542-\u5907\u5fd8\u5f55\u4f18\u5316"},"5.4.2 \u5907\u5fd8\u5f55\u4f18\u5316"),(0,a.kt)("p",null,"\u9884\u5148\u628a\u8fd9\u4e24\u4e2a\u6570\u7ec4\u8ba1\u7b97\u597d\uff0c\u5373\u53ef\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int trap(vector<int>& height) {\n    if (height.empty()) return 0;\n    int n = height.size();\n    int ans = 0;\n    // \u6570\u7ec4\u5145\u5f53\u5907\u5fd8\u5f55\n    vector<int> l_max(n), r_max(n);\n    // \u521d\u59cb\u5316 base case\n    l_max[0] = height[0];\n    r_max[n - 1] = height[n - 1];\n    // \u4ece\u5de6\u5411\u53f3\u8ba1\u7b97 l_max\n    for (int i = 1; i < n; i++)\n        l_max[i] = max(height[i], l_max[i - 1]);\n    // \u4ece\u53f3\u5411\u5de6\u8ba1\u7b97 r_max\n    for (int i = n - 2; i >= 0; i--) \n        r_max[i] = max(height[i], r_max[i + 1]);\n    // \u8ba1\u7b97\u7b54\u6848\n    for (int i = 1; i < n - 1; i++) \n        ans += min(l_max[i], r_max[i]) - height[i];\n    return ans;\n}\n")),(0,a.kt)("h3",{id:"543-\u53cc\u6307\u9488\u89e3\u6cd5"},"5.4.3 \u53cc\u6307\u9488\u89e3\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int trap(vector<int>& height) {\n    if (height.empty()) return 0;\n    int n = height.size();\n    int left = 0, right = n - 1;\n    int ans = 0;\n    \n    int l_max = height[0];\n    int r_max = height[n - 1];\n    \n    while (left <= right) {\n        l_max = max(l_max, height[left]);\n        r_max = max(r_max, height[right]);\n        \n        // ans += min(l_max, r_max) - height[i]\n        if (l_max < r_max) {\n            ans += l_max - height[left];\n            left++; \n        } else {\n            ans += r_max - height[right];\n            right--;\n        }\n    }\n    return ans;\n}\n")))}p.isMDXComponent=!0}}]);