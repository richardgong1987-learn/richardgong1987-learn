"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[3122],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=c(r),m=o,f=s["".concat(u,".").concat(m)]||s[m]||d[m]||a;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[s]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},45143:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return s},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return c}});var n=r(83117),o=(r(67294),r(3905));const a={},l="3.3 \u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526",i={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526",title:"3.3 \u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3.2 \u5c42\u5c42\u62c6\u89e3\uff0c\u5e26\u4f60\u624b\u5199 LFU \u7b97\u6cd5",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/LFU"},next:{title:"3.5 \u7528\u5404\u79cd\u904d\u5386\u6846\u67b6\u6765\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e8c\u53c9\u6811",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u4e8c\u53c9\u6811\u7684\u5e8f\u5217\u5316"}},u={},c=[],p={toc:c};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"33-\u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526"},"3.3 \u4e8c\u53c9\u641c\u7d22\u6811\u64cd\u4f5c\u96c6\u9526"),(0,o.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/same-tree"},"100.\u76f8\u540c\u7684\u6811")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/delete-node-in-a-bst"},"450.\u5220\u9664\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u8282\u70b9")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/insert-into-a-binary-search-tree"},"701.\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u63d2\u5165\u64cd\u4f5c")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/search-in-a-binary-search-tree"},"700.\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u641c\u7d22")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/validate-binary-search-tree"},"98.\u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u76f8\u540c\u7684\u6811"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"boolean isSameTree(TreeNode root1, TreeNode root2) {\n    // \u90fd\u4e3a\u7a7a\u7684\u8bdd\uff0c\u663e\u7136\u76f8\u540c\n    if (root1 == null && root2 == null) return true;\n    // \u4e00\u4e2a\u4e3a\u7a7a\uff0c\u4e00\u4e2a\u975e\u7a7a\uff0c\u663e\u7136\u4e0d\u540c\n    if (root1 == null || root2 == null) return false;\n    // \u4e24\u4e2a\u90fd\u975e\u7a7a\uff0c\u4f46 val \u4e0d\u4e00\u6837\u4e5f\u4e0d\u884c\n    if (root1.val != root2.val) return false;\n\n    // root1 \u548c root2 \u8be5\u6bd4\u7684\u90fd\u6bd4\u5b8c\u4e86\n    return isSameTree(root1.left, root2.left)\n        && isSameTree(root1.right, root2.right);\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5224\u65ad BST \u7684\u5408\u6cd5\u6027"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"boolean isValidBST(TreeNode root) {\n    return isValidBST(root, null, null);\n}\n\nboolean isValidBST(TreeNode root, TreeNode min, TreeNode max) {\n    if (root == null) return true;\n    if (min != null && root.val <= min.val) return false;\n    if (max != null && root.val >= max.val) return false;\n    return isValidBST(root.left, min, root) \n        && isValidBST(root.right, root, max);\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5728 BST \u4e2d\u67e5\u627e\u4e00\u4e2a\u6570\u662f\u5426\u5b58\u5728"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"boolean isInBST(TreeNode root, int target) {\n    // root \u8be5\u505a\u7684\u4e8b\n    if (root == null) return false;\n    if (root.val == target)\n        return true;\n    // \u9012\u5f52\u6846\u67b6\n    if (root.val < target) \n        return isInBST(root.right, target);\n    if (root.val > target)\n        return isInBST(root.left, target);\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5728 BST \u4e2d\u63d2\u5165\u4e00\u4e2a\u6570"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"TreeNode insertIntoBST(TreeNode root, int val) {\n    // \u627e\u5230\u7a7a\u4f4d\u7f6e\u63d2\u5165\u65b0\u8282\u70b9\n    if (root == null) return new TreeNode(val);\n    // \u5982\u679c\u5df2\u5b58\u5728\uff0c\u5219\u4e0d\u8981\u518d\u91cd\u590d\u63d2\u5165\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de\n    if (root.val == val)\n        return root\n    // val \u5c0f\uff0c\u5219\u5e94\u8be5\u63d2\u5230\u5de6\u5b50\u6811\u4e0a\u9762\n    if (root.val < val) \n        root.right = insertIntoBST(root.right, val);\n    // val \u5927\uff0c\u5219\u5e94\u8be5\u63d2\u5230\u53f3\u5b50\u6811\u4e0a\u9762\n    if (root.val > val) \n        root.left = insertIntoBST(root.left, val);\n    return root;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5728 BST \u4e2d\u5220\u9664\u4e00\u4e2a\u6570"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"TreeNode deleteNode(TreeNode root, int key) {\n    if (root == null) return null;\n    if (root.val == key) {\n        // \u8fd9\u4e24\u4e2a if \u628a\u60c5\u51b5 1 \u548c 2 \u90fd\u6b63\u786e\u5904\u7406\u4e86\n        if (root.left == null) return root.right;\n        if (root.right == null) return root.left;\n        // \u5904\u7406\u60c5\u51b5 3\n        TreeNode minNode = getMin(root.right);\n        root.val = minNode.val;\n        root.right = deleteNode(root.right, minNode.val);\n    } else if (root.val > key) {\n        root.left = deleteNode(root.left, key);\n    } else if (root.val < key) {\n        root.right = deleteNode(root.right, key);\n    }\n    return root;\n}\n\nTreeNode getMin(TreeNode node) {\n    // BST \u6700\u5de6\u8fb9\u7684\u5c31\u662f\u6700\u5c0f\u7684\n    while (node.left != null) node = node.left;\n    return node;\n} \n")))}s.isMDXComponent=!0}}]);