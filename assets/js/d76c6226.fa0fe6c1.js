"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[3779],{3905:function(n,e,t){t.d(e,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var p=r.createContext({}),l=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},u=function(n){var e=l(n.components);return r.createElement(p.Provider,{value:e},n.children)},s={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,p=n.parentName,u=c(n,["components","mdxType","originalType","parentName"]),d=l(t),m=i,g=d["".concat(p,".").concat(m)]||d[m]||s[m]||o;return t?r.createElement(g,a(a({ref:e},u),{},{components:t})):r.createElement(g,a({ref:e},u))}));function m(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,a=new Array(o);a[0]=d;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=n,c.mdxType="string"==typeof n?n:i,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},33154:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=t(83117),i=t(80102),o=(t(67294),t(3905)),a=["components"],c={},p="2.9 \u6700\u5c0f\u63d2\u5165\u6b21\u6570\u6784\u9020\u56de\u6587\u4e32",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5c0f\u63d2\u5165\u56de\u6587",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5c0f\u63d2\u5165\u56de\u6587",title:"2.9 \u6700\u5c0f\u63d2\u5165\u6b21\u6570\u6784\u9020\u56de\u6587\u4e32",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5c0f\u63d2\u5165\u56de\u6587.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5c0f\u63d2\u5165\u56de\u6587",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5c0f\u63d2\u5165\u56de\u6587",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5c0f\u63d2\u5165\u56de\u6587.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.3 \u6700\u5927\u5b50\u6570\u7ec4\u95ee\u9898",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5927\u5b50\u6570\u7ec4"},next:{title:"2.5 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"}},u=[],s={toc:u};function d(n){var e=n.components,t=(0,i.Z)(n,a);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"29-\u6700\u5c0f\u63d2\u5165\u6b21\u6570\u6784\u9020\u56de\u6587\u4e32"},"2.9 \u6700\u5c0f\u63d2\u5165\u6b21\u6570\u6784\u9020\u56de\u6587\u4e32"),(0,o.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/minimum-insertion-steps-to-make-a-string-palindrome"},"1312.\u8ba9\u5b57\u7b26\u4e32\u6210\u4e3a\u56de\u6587\u4e32\u7684\u6700\u5c11\u63d2\u5165\u6b21\u6570")),(0,o.kt)("p",null,"\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int minInsertions(string s);\n")),(0,o.kt)("p",null,"\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int minInsertions(string s) {\n    int n = s.size();\n    // \u5b9a\u4e49\uff1a\u5bf9 s[i..j]\uff0c\u6700\u5c11\u9700\u8981\u63d2\u5165 dp[i][j] \u6b21\u624d\u80fd\u53d8\u6210\u56de\u6587\n    vector<vector<int>> dp(n, vector<int>(n, 0));\n    // base case\uff1ai == j \u65f6 dp[i][j] = 0\uff0c\u5355\u4e2a\u5b57\u7b26\u672c\u8eab\u5c31\u662f\u56de\u6587\n    // dp \u6570\u7ec4\u5df2\u7ecf\u5168\u90e8\u521d\u59cb\u5316\u4e3a 0\uff0cbase case \u5df2\u521d\u59cb\u5316\n\n    // \u4ece\u4e0b\u5411\u4e0a\u904d\u5386\n    for (int i = n - 2; i >= 0; i--) {\n        // \u4ece\u5de6\u5411\u53f3\u904d\u5386\n        for (int j = i + 1; j < n; j++) {\n            // \u6839\u636e s[i] \u548c s[j] \u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\n            if (s[i] == s[j]) {\n                dp[i][j] = dp[i + 1][j - 1];\n            } else {\n                dp[i][j] = min(dp[i + 1][j], dp[i][j - 1]) + 1;\n            }\n        }\n    }\n    // \u6839\u636e dp \u6570\u7ec4\u7684\u5b9a\u4e49\uff0c\u9898\u76ee\u8981\u6c42\u7684\u7b54\u6848\n    return dp[0][n - 1];\n}\n")),(0,o.kt)("p",null,"\u73b0\u5728\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(N^2)\u3002\u8fd8\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u6ce8\u610f\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"dp")," \u6570\u7ec4\u7684\u72b6\u6001\u4e4b\u548c\u5b83\u76f8\u90bb\u7684\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5 ",(0,o.kt)("inlineCode",{parentName:"p"},"dp")," \u6570\u7ec4\u662f\u53ef\u4ee5\u538b\u7f29\u6210\u4e00\u7ef4\u7684\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int minInsertions(string s) {\n    int n = s.size();\n    vector<int> dp(n, 0);\n    \n    int temp = 0;\n    for (int i = n - 2; i >= 0; i--) {\n        // \u8bb0\u5f55 dp[i+1][j-1]\n        int pre = 0;\n        for (int j = i + 1; j < n; j++) {\n            temp = dp[j];\n            \n            if (s[i] == s[j]) {\n                // dp[i][j] = dp[i+1][j-1];\n                dp[j] = pre;\n            } else {\n                // dp[i][j] = min(dp[i+1][j], dp[i][j-1]) + 1;\n                dp[j] = =min(dp[j], dp[j - 1]) + 1;\n            }\n            \n            pre = temp;\n        }\n    }\n    \n    return dp[n - 1];\n}\n")))}d.isMDXComponent=!0}}]);