(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[5062],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,g=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(g,c(c({ref:t},s),{},{components:r})):n.createElement(g,c({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},64510:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return s},default:function(){return d}});var n=r(22122),o=r(19756),a=(r(67294),r(3905)),c=["components"],i={},u="2.5 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",isDocsHomePage:!1,title:"2.5 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.9 \u6700\u5c0f\u63d2\u5165\u6b21\u6570\u6784\u9020\u56de\u6587\u4e32",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u5c0f\u63d2\u5165\u56de\u6587"},next:{title:"\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe"}},s=[{value:"2.5.1 \u52a8\u6001\u89c4\u5212\u601d\u8def",id:"251-\u52a8\u6001\u89c4\u5212\u601d\u8def",children:[]}],p={toc:s};function d(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"25-\u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},"2.5 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"),(0,a.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/longest-common-subsequence"},"1143.\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217")),(0,a.kt)("h3",{id:"251-\u52a8\u6001\u89c4\u5212\u601d\u8def"},"2.5.1 \u52a8\u6001\u89c4\u5212\u601d\u8def"),(0,a.kt)("p",null,"\u66b4\u529b\u89e3\u6cd5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def longestCommonSubsequence(str1, str2) -> int:\n    def dp(i, j):\n        # \u7a7a\u4e32\u7684 base case\n        if i == -1 or j == -1:\n            return 0\n\n        if str1[i] == str2[j]:\n            # \u8fd9\u8fb9\u627e\u5230\u4e00\u4e2a lcs \u4e2d\u7684\u5143\u7d20\n            return dp(i - 1, j - 1) + 1\n        else:\n            # \u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u7b26\u4e0d\u5728 lcs \u4e2d\n            # \u90fd\u8bd5\u4e00\u4e0b\uff0c\u8c01\u80fd\u8ba9 lcs \u6700\u957f\uff0c\u5c31\u542c\u8c01\u7684\n            return max(dp(i-1, j), dp(i, j-1))\n        \n    # \u6211\u4eec\u60f3\u7b97 str1[0..end] \u548c str2[0..end] \u4e2d\u7684 lcs \u957f\u5ea6\n    return dp(len(str1)-1, len(str2)-1)\n")),(0,a.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7\u5907\u5fd8\u5f55\u6216\u8005 DP table \u6765\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6bd4\u5982\u901a\u8fc7\u524d\u6587\u63cf\u8ff0\u7684 DP table \u6765\u89e3\u51b3\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int longestCommonSubsequence(string str1, string str2) {\n    int m = str1.size(), n = str2.size();\n    // \u5b9a\u4e49\uff1a\u5bf9\u4e8e s1[0..i-1] \u548c s2[0..j-1]\uff0c\u5b83\u4eec\u7684 LCS \u957f\u5ea6\u662f dp[i][j]\n    vector<vector<int>> dp(m + 1, vector<int>(n + 1, 0));\n    // base case\uff1adp[0][..] = dp[..][0] = 0\uff0c\u5df2\u521d\u59cb\u5316\n\n    for (int i = 1; i <= m; i++) {\n        for (int j = 1; j <= n; j++) {\n            // \u72b6\u6001\u8f6c\u79fb\u903b\u8f91\n            if (str1[i - 1] == str2[j - 1]) {\n                dp[i][j] = dp[i - 1][j - 1] + 1;\n            } else {\n                dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);\n            }\n        }\n    }\n    return dp[m][n];\n}\n")))}d.isMDXComponent=!0}}]);