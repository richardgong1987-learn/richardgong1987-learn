"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[6844],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),s=i(r),d=o,f=s["".concat(l,".").concat(d)]||s[d]||m[d]||a;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[s]="string"==typeof e?e:o,c[1]=u;for(var i=2;i<a;i++)c[i]=r[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},42816:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return s},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return i}});var n=r(83117),o=(r(67294),r(3905));const a={},c="3.4 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u4e3a\u4ec0\u4e48\u90a3\u4e48\u96be\u7b97",u={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u5b8c\u5168\u4e8c\u53c9\u6811\u8282\u70b9\u6570",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u5b8c\u5168\u4e8c\u53c9\u6811\u8282\u70b9\u6570",title:"3.4 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u4e3a\u4ec0\u4e48\u90a3\u4e48\u96be\u7b97",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u5b8c\u5168\u4e8c\u53c9\u6811\u8282\u70b9\u6570.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u5b8c\u5168\u4e8c\u53c9\u6811\u8282\u70b9\u6570",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u5b8c\u5168\u4e8c\u53c9\u6811\u8282\u70b9\u6570",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u5b8c\u5168\u4e8c\u53c9\u6811\u8282\u70b9\u6570.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3.8 \u7279\u6b8a\u6570\u636e\u7ed3\u6784\uff1a\u5355\u8c03\u961f\u5217",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u5355\u8c03\u961f\u5217"},next:{title:"4.7 \u62c6\u89e3\u590d\u6742\u95ee\u9898\uff1a\u5b9e\u73b0\u8ba1\u7b97\u5668",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u6570\u636e\u7ed3\u6784\u7cfb\u5217/\u5b9e\u73b0\u8ba1\u7b97\u5668"}},l={},i=[],p={toc:i};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"34-\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u4e3a\u4ec0\u4e48\u90a3\u4e48\u96be\u7b97"},"3.4 \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u4e3a\u4ec0\u4e48\u90a3\u4e48\u96be\u7b97"),(0,o.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/count-complete-tree-nodes"},"222.\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public int countNodes(TreeNode root) {\n    TreeNode l = root, r = root;\n    // \u8bb0\u5f55\u5de6\u3001\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\n    int hl = 0, hr = 0;\n    while (l != null) {\n        l = l.left;\n        hl++;\n    }\n    while (r != null) {\n        r = r.right;\n        hr++;\n    }\n    // \u5982\u679c\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u76f8\u540c\uff0c\u8bf4\u660e\u662f\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\n    if (hl == hr) {\n        return (int)Math.pow(2, hl) - 1;\n    }\n    // \u5982\u679c\u5de6\u53f3\u9ad8\u5ea6\u4e0d\u540c\uff0c\u5219\u6309\u7167\u666e\u901a\u4e8c\u53c9\u6811\u7684\u903b\u8f91\u8ba1\u7b97\n    return 1 + countNodes(root.left) + countNodes(root.right);\n}\n")))}s.isMDXComponent=!0}}]);