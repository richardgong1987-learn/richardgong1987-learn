"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[3741],{3905:function(n,t,e){e.d(t,{Zo:function(){return m},kt:function(){return g}});var r=e(67294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function u(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function i(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?u(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):u(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function s(n,t){if(null==n)return{};var e,r,a=function(n,t){if(null==n)return{};var e,r,a={},u=Object.keys(n);for(r=0;r<u.length;r++)e=u[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(n);for(r=0;r<u.length;r++)e=u[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var o=r.createContext({}),l=function(n){var t=r.useContext(o),e=t;return n&&(e="function"==typeof n?n(t):i(i({},t),n)),e},m=function(n){var t=l(n.components);return r.createElement(o.Provider,{value:t},n.children)},c="mdxType",p={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(n,t){var e=n.components,a=n.mdxType,u=n.originalType,o=n.parentName,m=s(n,["components","mdxType","originalType","parentName"]),c=l(e),d=a,g=c["".concat(o,".").concat(d)]||c[d]||p[d]||u;return e?r.createElement(g,i(i({ref:t},m),{},{components:e})):r.createElement(g,i({ref:t},m))}));function g(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var u=e.length,i=new Array(u);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=n,s[c]="string"==typeof n?n:a,i[1]=s;for(var l=2;l<u;l++)i[l]=e[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,e)}d.displayName="MDXCreateElement"},66618:function(n,t,e){e.r(t),e.d(t,{assets:function(){return o},contentTitle:function(){return i},default:function(){return c},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return l}});var r=e(83117),a=(e(67294),e(3905));const u={},i="2.19 \u52a8\u6001\u89c4\u5212\u548c\u56de\u6eaf\u7b97\u6cd5\uff0c\u5230\u5e95\u8c01\u662f\u8c01\u7239",s={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/targetSum",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/targetSum",title:"2.19 \u52a8\u6001\u89c4\u5212\u548c\u56de\u6eaf\u7b97\u6cd5\uff0c\u5230\u5e95\u8c01\u662f\u8c01\u7239",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/targetSum.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/targetSum",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/targetSum",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/targetSum.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SUMMARY",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/SUMMARY"},next:{title:"2.11 \u4e0d\u540c\u7684\u5b9a\u4e49\u4ea7\u751f\u4e0d\u540c\u7684\u89e3\u6cd5",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u52a8\u6001\u89c4\u5212\u4e4b\u56db\u952e\u952e\u76d8"}},o={},l=[{value:"2.19.1 \u56de\u6eaf\u601d\u8def",id:"2191-\u56de\u6eaf\u601d\u8def",level:3},{value:"2.19.2 \u6d88\u9664\u91cd\u53e0\u5b50\u95ee\u9898",id:"2192-\u6d88\u9664\u91cd\u53e0\u5b50\u95ee\u9898",level:3},{value:"2.19.3 \u52a8\u6001\u89c4\u5212",id:"2193-\u52a8\u6001\u89c4\u5212",level:3}],m={toc:l};function c(n){let{components:t,...e}=n;return(0,a.kt)("wrapper",(0,r.Z)({},m,e,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"219-\u52a8\u6001\u89c4\u5212\u548c\u56de\u6eaf\u7b97\u6cd5\u5230\u5e95\u8c01\u662f\u8c01\u7239"},"2.19 \u52a8\u6001\u89c4\u5212\u548c\u56de\u6eaf\u7b97\u6cd5\uff0c\u5230\u5e95\u8c01\u662f\u8c01\u7239"),(0,a.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/target-sum"},"494.\u76ee\u6807\u548c")),(0,a.kt)("p",null,"\u51fd\u6570\u7684\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"int findTargetSumWays(int[] nums, int target);\n")),(0,a.kt)("h3",{id:"2191-\u56de\u6eaf\u601d\u8def"},"2.19.1 \u56de\u6eaf\u601d\u8def"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"int result = 0;\n\n/* \u4e3b\u51fd\u6570 */\nint findTargetSumWays(int[] nums, int target) {\n    if (nums.length == 0) return 0;\n    backtrack(nums, 0, target);\n    return result;\n}\n\n/* \u56de\u6eaf\u7b97\u6cd5\u6a21\u677f */\nvoid backtrack(int[] nums, int i, int rest) {\n    // base case\n    if (i == nums.length) {\n        if (rest == 0) {\n            // \u8bf4\u660e\u6070\u597d\u51d1\u51fa target\n            result++;\n        }\n        return;\n    }\n    // \u7ed9 nums[i] \u9009\u62e9 - \u53f7\n    rest += nums[i];\n    // \u7a77\u4e3e nums[i + 1]\n    backtrack(nums, i + 1, rest);\n    // \u64a4\u9500\u9009\u62e9\n    rest -= nums[i]; \n    \n    // \u7ed9 nums[i] \u9009\u62e9 + \u53f7\n    rest -= nums[i];\n    // \u7a77\u4e3e nums[i + 1]\n    backtrack(nums, i + 1, rest);\n    // \u64a4\u9500\u9009\u62e9\n    rest += nums[i];\n}\n")),(0,a.kt)("h3",{id:"2192-\u6d88\u9664\u91cd\u53e0\u5b50\u95ee\u9898"},"2.19.2 \u6d88\u9664\u91cd\u53e0\u5b50\u95ee\u9898"),(0,a.kt)("p",null,"\u72b6\u6001 ",(0,a.kt)("inlineCode",{parentName:"p"},"(i, rest)")," \u662f\u53ef\u4ee5\u7528\u5907\u5fd8\u5f55\u6280\u5de7\u8fdb\u884c\u4f18\u5316\u7684\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'int findTargetSumWays(int[] nums, int target) {\n    if (nums.length == 0) return 0;\n    return dp(nums, nums.length - 1, target);\n}\n\n// \u5907\u5fd8\u5f55\nHashMap<String, Integer> memo = new HashMap<>();\nint dp(int[] nums, int i, int rest) {\n    // base case\n    if (i == nums.length) {\n        if (rest == 0) return 1;\n        return 0;\n    }\n    // \u628a\u5b83\u4fe9\u8f6c\u6210\u5b57\u7b26\u4e32\u624d\u80fd\u4f5c\u4e3a\u54c8\u5e0c\u8868\u7684\u952e\n    String key = i + "," + rest;\n    // \u907f\u514d\u91cd\u590d\u8ba1\u7b97\n    if (memo.containsKey(key)) {\n        return memo.get(key);\n    }\n    // \u8fd8\u662f\u7a77\u4e3e\n    int result = dp(nums, i + 1, rest - nums[i]) + dp(nums, i + 1, rest + nums[i]);\n    // \u8bb0\u5165\u5907\u5fd8\u5f55\n    memo.put(key, result);\n    return result;\n}\n')),(0,a.kt)("h3",{id:"2193-\u52a8\u6001\u89c4\u5212"},"2.19.3 \u52a8\u6001\u89c4\u5212"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"int findTargetSumWays(int[] nums, int target) {\n    int sum = 0;\n    for (int n : nums) sum += n;\n    // \u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u4e0d\u53ef\u80fd\u5b58\u5728\u5408\u6cd5\u7684\u5b50\u96c6\u5212\u5206\n    if (sum < target || (sum + target) % 2 == 1) {\n        return 0;\n    }\n    return subsets(nums, (sum + target) / 2);\n}\n\n/* \u8ba1\u7b97 nums \u4e2d\u6709\u51e0\u4e2a\u5b50\u96c6\u7684\u548c\u4e3a sum */\nint subsets(int[] nums, int sum) {\n    int n = nums.length;\n    int[][] dp = new int[n + 1][sum + 1];\n    // base case\n    for (int i = 0; i <= n; i++) {\n        dp[i][0] = 1;\n    }\n    \n    for (int i = 1; i <= n; i++) {\n        for (int j = 0; j <= sum; j++) {\n            if (j >= nums[i-1]) {\n                // \u4e24\u79cd\u9009\u62e9\u7684\u7ed3\u679c\u4e4b\u548c\n                dp[i][j] = dp[i-1][j] + dp[i-1][j-nums[i-1]];\n            } else {\n                // \u80cc\u5305\u7684\u7a7a\u95f4\u4e0d\u8db3\uff0c\u53ea\u80fd\u9009\u62e9\u4e0d\u88c5\u7269\u54c1 i\n                dp[i][j] = dp[i-1][j];\n            }\n        }\n    }\n    return dp[n][sum];\n}\n")),(0,a.kt)("p",null,"\u7136\u540e\uff0c\u53d1\u73b0\u8fd9\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"dp[i][j]")," \u53ea\u548c\u524d\u4e00\u884c ",(0,a.kt)("inlineCode",{parentName:"p"},"dp[i-1][..]")," \u6709\u5173\uff0c\u90a3\u4e48\u80af\u5b9a\u53ef\u4ee5\u4f18\u5316\u6210\u4e00\u7ef4 ",(0,a.kt)("inlineCode",{parentName:"p"},"dp"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"/* \u8ba1\u7b97 nums \u4e2d\u6709\u51e0\u4e2a\u5b50\u96c6\u7684\u548c\u4e3a sum */\nint subsets(int[] nums, int sum) {\n    int n = nums.length;\n    int[] dp = new int[sum + 1];\n    // base case\n    dp[0] = 1;\n    \n    for (int i = 1; i <= n; i++) {\n        // j \u8981\u4ece\u540e\u5f80\u524d\u904d\u5386\n        for (int j = sum; j >= 0; j--) {\n            // \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n            if (j >= nums[i-1]) {\n                dp[j] = dp[j] + dp[j-nums[i-1]];\n            } else {\n                dp[j] = dp[j];\n            }\n        }\n    }\n    return dp[sum];\n}\n")))}c.isMDXComponent=!0}}]);