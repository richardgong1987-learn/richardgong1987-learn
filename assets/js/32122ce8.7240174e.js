(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[8381],{3905:function(e,r,n){"use strict";n.d(r,{Zo:function(){return s},kt:function(){return g}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=t.createContext({}),l=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},s=function(e){var r=l(e.components);return t.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=l(n),g=o,f=m["".concat(u,".").concat(g)]||m[g]||p[g]||a;return n?t.createElement(f,i(i({ref:r},s),{},{components:n})):t.createElement(f,i({ref:r},s))}));function g(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},55126:function(e,r,n){"use strict";n.r(r),n.d(r,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return s},default:function(){return m}});var t=n(22122),o=n(19756),a=(n(67294),n(3905)),i=["components"],c={},u="\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe",isDocsHomePage:!1,title:"\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.5 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},next:{title:"2.6 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u7f16\u8f91\u8ddd\u79bb",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u7f16\u8f91\u8ddd\u79bb"}},s=[],p={toc:s};function m(e){var r=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe"},"\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe"),(0,a.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/regular-expression-matching/"},"10.\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d")),(0,a.kt)("p",null,"\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"bool isMatch(string s, string p);\n")),(0,a.kt)("p",null,"\u5b8c\u6574\u7684\u4ee3\u7801\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"bool isMatch(string s, string p) {\n    // \u6307\u9488 i\uff0cj \u4ece\u7d22\u5f15 0 \u5f00\u59cb\u79fb\u52a8\n    return dp(s, 0, p, 0);\n}\n\n/* \u8ba1\u7b97 p[j..] \u662f\u5426\u5339\u914d s[i..] */\nbool dp(string& s, int i, string& p, int j) {\n    int m = s.size(), n = p.size();\n    // base case\n    if (j == n) {\n        return i == m;\n    }\n    if (i == m) {\n        if ((n - j) % 2 == 1) {\n            return false;\n        }\n        for (; j + 1 < n; j += 2) {\n            if (p[j + 1] != '*') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // \u8bb0\u5f55\u72b6\u6001 (i, j)\uff0c\u6d88\u9664\u91cd\u53e0\u5b50\u95ee\u9898\n    string key = to_string(i) + \",\" + to_string(j);\n    if (memo.count(key)) return memo[key];\n    \n    bool res = false;\n    if (s[i] == p[j] || p[j] == '.') {\n        if (j < n - 1 && p[j + 1] == '*') {\n            res = dp(s, i, p, j + 2)\n               || dp(s, i + 1, p, j);\n        } else {\n            res = dp(s, i + 1, p, j + 1);\n        }\n    } else {\n        if (j < n - 1 && p[j + 1] == '*') {\n            res = dp(s, i, p, j + 2);\n        } else {\n            res = false;\n        }\n    }\n    // \u5c06\u5f53\u524d\u7ed3\u679c\u8bb0\u5165\u5907\u5fd8\u5f55\n    memo[key] = res;\n    \n    return res;\n}\n")))}m.isMDXComponent=!0}}]);