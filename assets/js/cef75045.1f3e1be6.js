"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[1668],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return k}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(a),d=r,k=c["".concat(p,".").concat(d)]||c[d]||u[d]||l;return a?n.createElement(k,i(i({ref:t},m),{},{components:a})):n.createElement(k,i({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},78122:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return c},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return s}});var n=a(83117),r=(a(67294),a(3905));const l={},i="algorithm math notation",o={unversionedId:"c-computer/math-notation/readme",id:"c-computer/math-notation/readme",title:"algorithm math notation",description:"https://latex.codecogs.com/",source:"@site/docs/c-computer/math-notation/readme.md",sourceDirName:"c-computer/math-notation",slug:"/c-computer/math-notation/",permalink:"/richardgong1987-learn/docs/c-computer/math-notation/",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/math-notation/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"leetcode96",permalink:"/richardgong1987-learn/docs/c-computer/leetcode/BST/leetcode96"}},p={},s=[{value:"variable name conventions",id:"variable-name-conventions",level:2},{value:"equals symbols",id:"equals-symbols",level:2},{value:"square root and complex numbers",id:"square-root-and-complex-numbers",level:2},{value:"dot &amp; cross",id:"dot--cross",level:2},{value:"scalar multiplication",id:"scalar-multiplication",level:4},{value:"vector multiplication",id:"vector-multiplication",level:4},{value:"dot product",id:"dot-product",level:4},{value:"cross product",id:"cross-product",level:4},{value:"sigma",id:"sigma",level:2},{value:"capital Pi",id:"capital-pi",level:2},{value:"pipes",id:"pipes",level:2},{value:"absolute value",id:"absolute-value",level:4},{value:"Euclidean norm",id:"euclidean-norm",level:4},{value:"determinant",id:"determinant",level:4},{value:"hat",id:"hat",level:2},{value:"element",id:"element",level:2},{value:"common number sets",id:"common-number-sets",level:2},{value:"<code>\u211d</code> real numbers",id:"\u211d-real-numbers",level:4},{value:"<code>\u211a</code> rational numbers",id:"\u211a-rational-numbers",level:4},{value:"<code>\u2124</code> integers",id:"\u2124-integers",level:4},{value:"<code>\u2115</code> natural numbers",id:"\u2115-natural-numbers",level:4},{value:"<code>\u2102</code> complex numbers",id:"\u2102-complex-numbers",level:4},{value:"function",id:"function",level:2},{value:"piecewise function",id:"piecewise-function",level:3},{value:"common functions",id:"common-functions",level:3},{value:"function notation",id:"function-notation",level:3},{value:"prime",id:"prime",level:2},{value:"floor &amp; ceiling",id:"floor--ceiling",level:2},{value:"arrows",id:"arrows",level:2},{value:"material implication",id:"material-implication",level:4},{value:"equality",id:"equality",level:4},{value:"conjunction &amp; disjunction",id:"conjunction--disjunction",level:4},{value:"logical negation",id:"logical-negation",level:2},{value:"intervals",id:"intervals",level:2}],m={toc:s};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"algorithm-math-notation"},"algorithm math notation"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://latex.codecogs.com/"},"https://latex.codecogs.com/")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://editor.codecogs.com/"},"https://editor.codecogs.com/")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Glossary_of_mathematical_symbols"},"https://en.wikipedia.org/wiki/Glossary_of_mathematical_symbols")),(0,r.kt)("h2",{id:"variable-name-conventions"},"variable name conventions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"s")," - italic lowercase letters for scalars (e.g. a number)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"x")," - bold lowercase letters for vectors (e.g. a 2D point)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"A")," - bold uppercase letters for matrices (e.g. a 3D transformation)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"\u03b8")," - italic lowercase Greek letters for constants and special variables")),(0,r.kt)("h2",{id:"equals-symbols"},"equals symbols"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"=")," is for equality (values are the same)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"\u2260")," is for inequality (value are not the same)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"\u2248")," is for approximately equal to (",(0,r.kt)("inlineCode",{parentName:"li"},"\u03c0 \u2248 3.14159"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":=")," is for definition (A is defined as B)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// equality\n2 === 3\n\n// inequality\n2 !== 3\n\n// approximately equal\nalmostEqual(Math.PI, 3.14159, 1e-5)\n\nfunction almostEqual(a, b, epsilon) {\n  return Math.abs(a - b) <= epsilon\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?x%20%3A%3D%202kj",alt:"equals1"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?x%20%3D%202kj",alt:"equals2"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\nvar x = 2 * k * j\n\nconst f = (k, j) => 2 * k * j\n\n")),(0,r.kt)("h2",{id:"square-root-and-complex-numbers"},"square root and complex numbers"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cleft%28%5Csqrt%7Bx%7D%5Cright%29%5E2%20%3D%20x",alt:"squareroot"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var x = 9;\nconsole.log(Math.sqrt(x));\n//=> 3\n")),(0,r.kt)("p",null,"Complex numbers: ",(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?a&space;+&space;ib",alt:"complex"}),", where ",(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?a",alt:"a"})," is the real part and ",(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?b",alt:"b"})," is the imaginary part. The imaginary number ",(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?i",alt:"i"})," is defined as:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?i%3D%5Csqrt%7B-1%7D",alt:"imaginary"}),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var math = require('mathjs')\n\nvar a = math.complex(3, -1)\n//=> { re: 3, im: -1 }\n\nvar b = math.sqrt(-1)\n//=> { re: 0, im: 1 }\n\nconsole.log(math.multiply(a, b).toString())\n//=> '1 + 3i'\n\nconsole.log(math.eval('(3 - i) * i').toString())\n//=> '1 + 3i'\n")),(0,r.kt)("h2",{id:"dot--cross"},"dot & cross"),(0,r.kt)("h4",{id:"scalar-multiplication"},"scalar multiplication"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?5%20%5Ccdot%204%20%3D%205%20%5Ctimes%204",alt:"dotcross1"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var result = 5 * 4\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?3kj",alt:"dotcross2"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var result = 3 * k * j\n")),(0,r.kt)("h4",{id:"vector-multiplication"},"vector multiplication"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?3%5Cmathbf%7Bk%7D%5Ccirc%5Cmathbf%7Bj%7D",alt:"dotcross3"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var s = 3\nvar k = [ 1, 2 ]\nvar j = [ 2, 3 ]\n\nvar tmp = multiply(k, j)\nvar result = multiplyScalar(tmp, s)\n//=> [ 6, 18 ]\n\nfunction multiply(a, b) {\n  return [ a[0] * b[0], a[1] * b[1] ]\n}\n\nfunction multiplyScalar(a, scalar) {\n  return [ a[0] * scalar, a[1] * scalar ]\n}\n")),(0,r.kt)("h4",{id:"dot-product"},"dot product"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cmathbf%7Bk%7D%5Ccdot%20%5Cmathbf%7Bj%7D",alt:"dotcross4"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var k = [ 0, 1, 0 ]\nvar j = [ 1, 0, 0 ]\n\nvar d = dot(k, j)\n//=> 0\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}\n")),(0,r.kt)("h4",{id:"cross-product"},"cross product"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cmathbf%7Bk%7D%5Ctimes%20%5Cmathbf%7Bj%7D",alt:"dotcross5"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var k = [ 0, 1, 0 ]\nvar j = [ 1, 0, 0 ]\n\nvar result = cross(k, j)\n//=> [ 0, 0, -1 ]\n\nfunction cross(a, b) {\n  var ax = a[0], ay = a[1], az = a[2],\n    bx = b[0], by = b[1], bz = b[2]\n\n  var rx = ay * bz - az * by\n  var ry = az * bx - ax * bz\n  var rz = ax * by - ay * bx\n  return [ rx, ry, rz ]\n}\n")),(0,r.kt)("h2",{id:"sigma"},"sigma"),(0,r.kt)("p",null,"The big Greek ",(0,r.kt)("inlineCode",{parentName:"p"},"\u03a3")," (Sigma), summing up some numbers."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Csum_%7Bi%3D1%7D%5E%7B100%7Di",alt:"sigma"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var sum = 0\nfor (var i = 1; i <= 100; i++) {\n  sum += i\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Csum_%7Bi%3D1%7D%5E%7B100%7D%282i+1%29",alt:"sum2"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var sum = 0\nfor (var i = 1; i <= 100; i++) {\n  sum += (2 * i + 1)\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Csum_%7Bi%3D1%7D%5E%7B2%7D%5Csum_%7Bj%3D4%7D%5E%7B6%7D%283ij%29",alt:"sigma3"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var sum = 0\nfor (var i = 1; i <= 2; i++) {\n  for (var j = 4; j <= 6; j++) {\n    sum += (3 * i * j)\n  }\n}\n")),(0,r.kt)("h2",{id:"capital-pi"},"capital Pi"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cprod_%7Bi%3D1%7D%5E%7B6%7Di",alt:"capitalPi"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var value = 1\nfor (var i = 1; i <= 6; i++) {\n  value *= i\n}\n")),(0,r.kt)("h2",{id:"pipes"},"pipes"),(0,r.kt)("h4",{id:"absolute-value"},"absolute value"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cleft%20%7C%20x%20%5Cright%20%7C",alt:"pipes1"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var x = -5\nvar result = Math.abs(x)\n// => 5\n")),(0,r.kt)("h4",{id:"euclidean-norm"},"Euclidean norm"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cleft%20%5C%7C%20%5Cmathbf%7Bv%7D%20%5Cright%20%5C%7C",alt:"pipes4"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cleft%20%7C%20%5Cmathbf%7Bv%7D%20%5Cright%20%7C",alt:"pipes2"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var v = [ 0, 4, -3 ]\nlength(v)\n//=> 5\n\nfunction length ([x,y,z]) {\n  return Math.sqrt(x * x + y * y + z * z)\n}\n")),(0,r.kt)("h4",{id:"determinant"},"determinant"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cleft%20%7C%5Cmathbf%7BA%7D%20%5Cright%20%7C",alt:"pipes3"})),(0,r.kt)("p",null,"matrix ",(0,r.kt)("strong",{parentName:"p"},"A"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"|A|")," means the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Determinant"},"determinant")," of matrix ",(0,r.kt)("strong",{parentName:"p"},"A"),"."),(0,r.kt)("p",null,"computing the determinant of a 2x2 matrix, represented by a flat array in column-major format."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var determinant = require('gl-mat2/determinant')\n\nvar matrix = [ 1, 0, 0, 1 ]\nvar det = determinant(matrix)\n//=> 1\n")),(0,r.kt)("h2",{id:"hat"},"hat"),(0,r.kt)("p",null,'In geometry, the "hat" symbol above a character is used to represent a ',(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Unit_vector"},"unit vector"),". For example, here is the unit vector of ",(0,r.kt)("strong",{parentName:"p"},"a"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Chat%7B%5Cmathbf%7Ba%7D%7D",alt:"hat"})),(0,r.kt)("p",null,"In Cartesian space, a unit vector is typically length 1. That means each part of the vector will be in the range of -1.0 to 1.0. Here we ",(0,r.kt)("em",{parentName:"p"},"normalize")," a 3D vector into a unit vector:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var a = [ 0, 4, -3 ]\nnormalize(a)\n//=> [ 0, 0.8, -0.6 ]\n\nfunction normalize(vec) {\n  var x = vec[0]\n  var y = vec[1]\n  var z = vec[2]\n  var squaredLength = x * x + y * y + z * z\n\n  if (squaredLength > 0) {\n    var length = Math.sqrt(squaredLength)\n    vec[0] = x / length\n    vec[1] = y / length\n    vec[2] = z / length\n  }\n  return vec\n}\n")),(0,r.kt)("h2",{id:"element"},"element"),(0,r.kt)("p",null,'In set theory, the "element of" symbol ',(0,r.kt)("inlineCode",{parentName:"p"},"\u2208")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"\u220b")," can be used to describe whether something is an element of a ",(0,r.kt)("em",{parentName:"p"},"set"),". "),(0,r.kt)("p",null," ",(0,r.kt)("em",{parentName:"p"},"A")," ",(0,r.kt)("inlineCode",{parentName:"p"},"{ 3, 9, 14 }")," and we are saying ",(0,r.kt)("inlineCode",{parentName:"p"},"3"),' is an "element of" that set. '),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var A = [ 3, 9, 14 ]\n\nA.indexOf(3) >= 0\n//=> true\n\nvar A = new Set([ 3, 9, 14 ])\n\nA.has(3)\n//=> true\n")),(0,r.kt)("p",null,"The backwards ",(0,r.kt)("inlineCode",{parentName:"p"},"\u220b")," is the same, but the order changes:"),(0,r.kt)("p",null,'You can also use the "not an element of" symbols ',(0,r.kt)("inlineCode",{parentName:"p"},"\u2209")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"\u220c")," like so:"),(0,r.kt)("h2",{id:"common-number-sets"},"common number sets"),(0,r.kt)("p",null,"describe ",(0,r.kt)("em",{parentName:"p"},"k")," to be an element of the set ",(0,r.kt)("inlineCode",{parentName:"p"},"\u211d"),". "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?k%20%5Cin%20%5Cmathbb%7BR%7D",alt:"real"})),(0,r.kt)("p",null,"Listed below are a few common sets and their symbols."),(0,r.kt)("h4",{id:"\u211d-real-numbers"},(0,r.kt)("inlineCode",{parentName:"h4"},"\u211d")," real numbers"),(0,r.kt)("p",null,"The large ",(0,r.kt)("inlineCode",{parentName:"p"},"\u211d")," describes the set of ",(0,r.kt)("em",{parentName:"p"},"real numbers"),". These include integers, as well as rational and irrational numbers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function isReal (k) {\n  return typeof k === 'number' && isFinite(k);\n}\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note:")," Real numbers are also ",(0,r.kt)("em",{parentName:"p"},"finite"),", as in, ",(0,r.kt)("em",{parentName:"p"},"not infinite.")),(0,r.kt)("h4",{id:"\u211a-rational-numbers"},(0,r.kt)("inlineCode",{parentName:"h4"},"\u211a")," rational numbers"),(0,r.kt)("p",null,"Rational numbers are real numbers that can be expressed as a fraction, or ",(0,r.kt)("em",{parentName:"p"},"ratio")," (like ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2157"),"). Rational numbers cannot have zero as a denominator."),(0,r.kt)("p",null,"This also means that all integers are rational numbers, since the denominator can be expressed as 1."),(0,r.kt)("p",null,"An irrational number, on the other hand, is one that cannot be expressed as a ratio, like \u03c0 (PI). "),(0,r.kt)("h4",{id:"\u2124-integers"},(0,r.kt)("inlineCode",{parentName:"h4"},"\u2124")," integers"),(0,r.kt)("p",null,"An integer,  a real number that has no fractional part. These can be positive or negative."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function isInteger (n) {\n  return typeof n === 'number' && n % 1 === 0\n}\n")),(0,r.kt)("h4",{id:"\u2115-natural-numbers"},(0,r.kt)("inlineCode",{parentName:"h4"},"\u2115")," natural numbers"),(0,r.kt)("p",null,"A natural number, a positive and non-negative integer. Depending on the context and field of study, the set may or may not include zero, so it could look like either of these:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{ 0, 1, 2, 3, ... }\n{ 1, 2, 3, 4, ... }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function isNaturalNumber (n) {\n  return isInteger(n) && n >= 0\n}\n")),(0,r.kt)("h4",{id:"\u2102-complex-numbers"},(0,r.kt)("inlineCode",{parentName:"h4"},"\u2102")," complex numbers"),(0,r.kt)("p",null,"A complex number is a combination of a real and imaginary number, viewed as a co-ordinate in the 2D plane. For more info, see ",(0,r.kt)("a",{parentName:"p",href:"http://betterexplained.com/articles/a-visual-intuitive-guide-to-imaginary-numbers/"},"A Visual, Intuitive Guide to Imaginary Numbers"),"."),(0,r.kt)("h2",{id:"function"},"function"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?f%5Cleft%20%28x%20%5Cright%20%29%20%3D%20x%5E%7B2%7D",alt:"function2"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?y%20%3D%20x%5E%7B2%7D",alt:"function3"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function square (x) {\n  return Math.pow(x, 2)\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?f%28x%2Cy%29%20%3D%20%5Csqrt%7Bx%5E2%20+%20y%5E2%7D",alt:"function4"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function length (x, y) {\n  return Math.sqrt(x * x + y * y)\n}\n")),(0,r.kt)("h3",{id:"piecewise-function"},"piecewise function"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?f%28x%29%3D%20%5Cbegin%7Bcases%7D%20%5Cfrac%7Bx%5E2-x%7D%7Bx%7D%2C%26%20%5Ctext%7Bif%20%7D%20x%5Cgeq%201%5C%5C%200%2C%20%26%20%5Ctext%7Botherwise%7D%20%5Cend%7Bcases%7D",alt:"piecewise1"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function f (x) {\n  if (x >= 1) {\n    return (Math.pow(x, 2) - x) / x\n  } else {\n    return 0\n  }\n}\n")),(0,r.kt)("h3",{id:"common-functions"},"common functions"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?sgn%28x%29%20%3A%3D%20%5Cbegin%7Bcases%7D%20-1%26%20%5Ctext%7Bif%20%7D%20x%20%3C%200%5C%5C%200%2C%20%26%20%5Ctext%7Bif%20%7D%20%7Bx%20%3D%200%7D%5C%5C%201%2C%20%26%20%5Ctext%7Bif%20%7D%20x%20%3E%200%5C%5C%20%5Cend%7Bcases%7D",alt:"sgn"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function sgn (x) {\n  if (x < 0) return -1\n  if (x > 0) return 1\n  return 0\n}\n")),(0,r.kt)("p",null,"Other examples of such functions: ",(0,r.kt)("em",{parentName:"p"},"sin"),", ",(0,r.kt)("em",{parentName:"p"},"cos"),", ",(0,r.kt)("em",{parentName:"p"},"tan"),"."),(0,r.kt)("h3",{id:"function-notation"},"function notation"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?f%5Cleft%20%28x%20%5Cright%20%29%20%3D%20x%5E%7B2%7D",alt:"function2"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?f%20%3A%20x%20%5Cmapsto%20x%5E2",alt:"mapsto"})),(0,r.kt)("p",null,'The arrow here with a tail typically means "maps to," as in ',(0,r.kt)("em",{parentName:"p"},"x maps to x",(0,r.kt)("sup",null,"2")),". "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?%5Cbegin%7Balign*%7D%20f%20%3A%26%5Cmathbb%7BR%7D%20%5Crightarrow%20%5Cmathbb%7BR%7D%5C%5C%20%26x%20%5Cmapsto%20x%5E2%20%5Cend%7Balign*%7D",alt:"funcnot"})),(0,r.kt)("p",null,"A function's ",(0,r.kt)("em",{parentName:"p"},"domain")," and ",(0,r.kt)("em",{parentName:"p"},"codomain")," is a bit like its ",(0,r.kt)("em",{parentName:"p"},"input")," and ",(0,r.kt)("em",{parentName:"p"},"output")," types, respectively. Here's another example, using our earlier ",(0,r.kt)("em",{parentName:"p"},"sgn")," function, which outputs an integer:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?sgn%20%3A%20%5Cmathbb%7BR%7D%20%5Crightarrow%20%5Cmathbb%7BZ%7D",alt:"domain2"})),(0,r.kt)("p",null,"The arrow here (without a tail) is used to map one ",(0,r.kt)("em",{parentName:"p"},"set")," to another."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * Squares a number.\n * @param  {Number} a real number\n * @return {Number} a real number\n */\nfunction square (a) {\n  return Math.pow(a, 2)\n}\n")),(0,r.kt)("h2",{id:"prime"},"prime"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?f%5Cleft%20%28x%20%5Cright%20%29%20%3D%20x%5E%7B2%7D",alt:"function2"})),(0,r.kt)("p",null,"Its derivative could be written with a prime ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2032")," symbol:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?f%27%28x%29%20%3D%202x",alt:"prime1"})),(0,r.kt)("p",null,"In code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function f (x) {\n  return Math.pow(x, 2)\n}\n\nfunction fPrime (x) {\n  return 2 * x\n}\n")),(0,r.kt)("h2",{id:"floor--ceiling"},"floor & ceiling"),(0,r.kt)("p",null,"The special brackets ",(0,r.kt)("inlineCode",{parentName:"p"},"\u230ax\u230b")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2308x\u2309")," represent the ",(0,r.kt)("em",{parentName:"p"},"floor")," and ",(0,r.kt)("em",{parentName:"p"},"ceil")," functions, respectively."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?floor%28x%29%20%3D%20%5Clfloor%20x%20%5Crfloor",alt:"floor"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?ceil%28x%29%20%3D%20%5Clceil%20x%20%5Crceil",alt:"ceil"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Math.floor(x)\nMath.ceil(x)\n")),(0,r.kt)("p",null,"When the two symbols are mixed ",(0,r.kt)("inlineCode",{parentName:"p"},"\u230ax\u2309"),", it typically represents a function that rounds to the nearest integer:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?round%28x%29%20%3D%20%5Clfloor%20x%20%5Crceil",alt:"round"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Math.round(x)\n")),(0,r.kt)("h2",{id:"arrows"},"arrows"),(0,r.kt)("p",null,"Arrows are often used in ",(0,r.kt)("a",{parentName:"p",href:"#function-notation"},"function notation"),". Here are a few other areas you might see them."),(0,r.kt)("h4",{id:"material-implication"},"material implication"),(0,r.kt)("p",null,"Arrows like ",(0,r.kt)("inlineCode",{parentName:"p"},"\u21d2")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2192")," are sometimes used in logic for ",(0,r.kt)("em",{parentName:"p"},"material implication.")," That is, if A is true, then B is also true."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?A%20%5CRightarrow%20B",alt:"material1"})),(0,r.kt)("p",null,"Interpreting this as code might look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"if (A === true) {\n  console.assert(B === true)\n}\n")),(0,r.kt)("p",null,"The arrows can go in either direction ",(0,r.kt)("inlineCode",{parentName:"p"},"\u21d0")," ",(0,r.kt)("inlineCode",{parentName:"p"},"\u21d2"),", or both ",(0,r.kt)("inlineCode",{parentName:"p"},"\u21d4"),". When ",(0,r.kt)("em",{parentName:"p"},"A \u21d2 B")," and ",(0,r.kt)("em",{parentName:"p"},"B \u21d2 A"),", they are said to be equivalent:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?A%20%5CLeftrightarrow%20B",alt:"material-equiv"})),(0,r.kt)("h4",{id:"equality"},"equality"),(0,r.kt)("p",null,"In math, the ",(0,r.kt)("inlineCode",{parentName:"p"},"<")," ",(0,r.kt)("inlineCode",{parentName:"p"},">")," ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2264")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2265")," are typically used in the same way we use them in code: ",(0,r.kt)("em",{parentName:"p"},"less than"),", ",(0,r.kt)("em",{parentName:"p"},"greater than"),", ",(0,r.kt)("em",{parentName:"p"},"less than or equal to")," and ",(0,r.kt)("em",{parentName:"p"},"greater than or equal to"),", respectively."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"50 > 2 === true\n2 < 10 === true\n3 <= 4 === true\n4 >= 4 === true\n")),(0,r.kt)("p",null,"On rare occasions you might see a slash through these symbols, to describe ",(0,r.kt)("em",{parentName:"p"},"not"),". As in, ",(0,r.kt)("em",{parentName:"p"},"k"),' is "not greater than" ',(0,r.kt)("em",{parentName:"p"},"j"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?k%20%5Cngtr%20j",alt:"ngt"})),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"\u226a")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"\u226b")," are sometimes used to represent ",(0,r.kt)("em",{parentName:"p"},"significant")," inequality. That is, ",(0,r.kt)("em",{parentName:"p"},"k")," is an ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Order_of_magnitude"},"order of magnitude")," larger than ",(0,r.kt)("em",{parentName:"p"},"j"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?k%20%5Cgg%20j",alt:"orderofmag"})),(0,r.kt)("p",null,"In mathematics, ",(0,r.kt)("em",{parentName:"p"},"order of magnitude"),' is rather specific; it is not just a "really big difference." A simple example of the above:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"orderOfMagnitude(k) > orderOfMagnitude(j)\n")),(0,r.kt)("p",null,"And below is our ",(0,r.kt)("inlineCode",{parentName:"p"},"orderOfMagnitude")," function, using ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc"},"Math.trunc")," (ES6)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function log10(n) {\n  // logarithm in base 10\n  return Math.log(n) / Math.LN10\n}\n\nfunction orderOfMagnitude (n) {\n  return Math.trunc(log10(n))\n}\n")),(0,r.kt)("h4",{id:"conjunction--disjunction"},"conjunction & disjunction"),(0,r.kt)("p",null,"Another use of arrows in logic is conjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2227")," and disjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2228"),". They are analogous to a programmer's ",(0,r.kt)("inlineCode",{parentName:"p"},"AND")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"OR")," operators, respectively."),(0,r.kt)("p",null,"The following shows conjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2227"),", the logical ",(0,r.kt)("inlineCode",{parentName:"p"},"AND"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?k%20%3E%202%20%5Cland%20k%20%3C%204%20%5CLeftrightarrow%20k%20%3D%203",alt:"and"})),(0,r.kt)("p",null,"we use ",(0,r.kt)("inlineCode",{parentName:"p"},"&&"),". Assuming ",(0,r.kt)("em",{parentName:"p"},"k")," is a natural number, the logic implies that ",(0,r.kt)("em",{parentName:"p"},"k")," is 3:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"if (k > 2 && k < 4) {\n  console.assert(k === 3)\n}\n")),(0,r.kt)("p",null,"Since both sides are equivalent ",(0,r.kt)("inlineCode",{parentName:"p"},"\u21d4"),", it also implies the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"if (k === 3) {\n  console.assert(k > 2 && k < 4)\n}\n")),(0,r.kt)("p",null,"The down arrow ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2228")," is logical disjunction, like the OR operator."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?A%20%5Clor%20B",alt:"logic-or"})),(0,r.kt)("p",null,"In code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"A || B\n")),(0,r.kt)("h2",{id:"logical-negation"},"logical negation"),(0,r.kt)("p",null,"Occasionally, the ",(0,r.kt)("inlineCode",{parentName:"p"},"\xac"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"~")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"!")," symbols are used to represent logical ",(0,r.kt)("inlineCode",{parentName:"p"},"NOT"),". For example, ",(0,r.kt)("em",{parentName:"p"},"\xacA")," is only true if A is false."),(0,r.kt)("p",null,"Here is a simple example using the ",(0,r.kt)("em",{parentName:"p"},"not")," symbol:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?x%20%5Cneq%20y%20%5CLeftrightarrow%20%5Clnot%28x%20%3D%20y%29",alt:"negation"})),(0,r.kt)("p",null,"An example of how we might interpret this in code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"if (x !== y) {\n  console.assert(!(x === y))\n}\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note:")," The tilde ",(0,r.kt)("inlineCode",{parentName:"p"},"~")," has many different meanings depending on context. For example, ",(0,r.kt)("em",{parentName:"p"},"row equivalence")," (matrix theory) or ",(0,r.kt)("em",{parentName:"p"},"same order of magnitude")," (discussed in ",(0,r.kt)("a",{parentName:"p",href:"#equality"},"equality"),")."),(0,r.kt)("h2",{id:"intervals"},"intervals"),(0,r.kt)("p",null,"Sometimes a function deals with real numbers restricted to some range of values, such a constraint can be represented using an ",(0,r.kt)("em",{parentName:"p"},"interval")),(0,r.kt)("p",null,"For example we can represent the numbers between zero and one including/not including zero and/or one as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Not including zero or one: ",(0,r.kt)("img",{parentName:"li",src:"http://latex.codecogs.com/svg.latex?%280%2C%201%29",alt:"interval-opened-left-opened-right"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Including zero or but not one: ",(0,r.kt)("img",{parentName:"li",src:"http://latex.codecogs.com/svg.latex?%5B0%2C%201%29",alt:"interval-closed-left-opened-right"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Not including zero but including one: ",(0,r.kt)("img",{parentName:"li",src:"http://latex.codecogs.com/svg.latex?%280%2C%201%5D",alt:"interval-opened-left-closed-right"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Including zero and one: ",(0,r.kt)("img",{parentName:"li",src:"http://latex.codecogs.com/svg.latex?%5B0%2C%201%5D",alt:"interval-closed-left-closed-right"}))),(0,r.kt)("p",null,"For example we to indicate that a point ",(0,r.kt)("inlineCode",{parentName:"p"},"x")," is in the unit cube in 3D we say:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://latex.codecogs.com/svg.latex?x%20%5Cin%20%5B0%2C%201%5D%5E3",alt:"interval-unit-cube"})),(0,r.kt)("p",null,"In code we can represent an interval using a two element 1d array:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var nextafter = require('nextafter')\n\nvar a = [nextafter(0, Infinity), nextafter(1, -Infinity)]     // open interval\nvar b = [nextafter(0, Infinity), 1]                           // interval closed on the left \nvar c = [0, nextafter(1, -Infinity)]                          // interval closed on the right\nvar d = [0, 1]                                                // closed interval\n")),(0,r.kt)("p",null,"Intervals are used in conjunction with set operations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"intersection")," e.g. ",(0,r.kt)("img",{parentName:"li",src:"http://latex.codecogs.com/svg.latex?%5B3%2C%205%29%20%5Ccap%20%5B4%2C%206%5D%20%3D%20%5B4%2C%205%29",alt:"interval-intersection"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"union")," e.g. ",(0,r.kt)("img",{parentName:"li",src:"http://latex.codecogs.com/svg.latex?%5B3%2C%205%29%20%5Ccup%20%5B4%2C%206%5D%20%3D%20%5B3%2C%206%5D",alt:"interval-union"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"difference")," e.g. ",(0,r.kt)("img",{parentName:"li",src:"http://latex.codecogs.com/svg.latex?%5B3%2C%205%29%20-%20%5B4%2C%206%5D%20%3D%20%5B3%2C%204%29",alt:"interval-difference-1"})," and ",(0,r.kt)("img",{parentName:"li",src:"http://latex.codecogs.com/svg.latex?%5B4%2C%206%5D%20-%20%5B3%2C%205%29%20%3D%20%5B5%2C%206%5D",alt:"interval-difference-2"}))),(0,r.kt)("p",null,"In code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var Interval = require('interval-arithmetic')\nvar nextafter = require('nextafter')\n\nvar a = Interval(3, nextafter(5, -Infinity))\nvar b = Interval(4, 6)\n\nInterval.intersection(a, b)\n// {lo: 4, hi: 4.999999999999999}\n\nInterval.union(a, b)\n// {lo: 3, hi: 6}\n\nInterval.difference(a, b)\n// {lo: 3, hi: 3.9999999999999996}\n\nInterval.difference(b, a)\n// {lo: 5, hi: 6}\n")))}c.isMDXComponent=!0}}]);