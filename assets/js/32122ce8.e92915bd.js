"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[8381],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return g}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=t.createContext({}),l=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=l(e.components);return t.createElement(u.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(r),f=o,g=p["".concat(u,".").concat(f)]||p[f]||m[f]||a;return r?t.createElement(g,i(i({ref:n},s),{},{components:r})):t.createElement(g,i({ref:n},s))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},55126:function(e,n,r){r.r(n),r.d(n,{assets:function(){return u},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l}});var t=r(83117),o=(r(67294),r(3905));const a={},i="\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe",c={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe",title:"\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6b63\u5219\u8868\u8fbe.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.5 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},next:{title:"2.6 \u7ecf\u5178\u52a8\u6001\u89c4\u5212\uff1a\u7f16\u8f91\u8ddd\u79bb",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u52a8\u6001\u89c4\u5212\u7cfb\u5217/\u7f16\u8f91\u8ddd\u79bb"}},u={},l=[],s={toc:l};function p(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe"},"\u52a8\u6001\u89c4\u5212\u4e4b\u6b63\u5219\u8868\u8fbe"),(0,o.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/regular-expression-matching/"},"10.\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d")),(0,o.kt)("p",null,"\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"bool isMatch(string s, string p);\n")),(0,o.kt)("p",null,"\u5b8c\u6574\u7684\u4ee3\u7801\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"bool isMatch(string s, string p) {\n    // \u6307\u9488 i\uff0cj \u4ece\u7d22\u5f15 0 \u5f00\u59cb\u79fb\u52a8\n    return dp(s, 0, p, 0);\n}\n\n/* \u8ba1\u7b97 p[j..] \u662f\u5426\u5339\u914d s[i..] */\nbool dp(string& s, int i, string& p, int j) {\n    int m = s.size(), n = p.size();\n    // base case\n    if (j == n) {\n        return i == m;\n    }\n    if (i == m) {\n        if ((n - j) % 2 == 1) {\n            return false;\n        }\n        for (; j + 1 < n; j += 2) {\n            if (p[j + 1] != '*') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // \u8bb0\u5f55\u72b6\u6001 (i, j)\uff0c\u6d88\u9664\u91cd\u53e0\u5b50\u95ee\u9898\n    string key = to_string(i) + \",\" + to_string(j);\n    if (memo.count(key)) return memo[key];\n    \n    bool res = false;\n    if (s[i] == p[j] || p[j] == '.') {\n        if (j < n - 1 && p[j + 1] == '*') {\n            res = dp(s, i, p, j + 2)\n               || dp(s, i + 1, p, j);\n        } else {\n            res = dp(s, i + 1, p, j + 1);\n        }\n    } else {\n        if (j < n - 1 && p[j + 1] == '*') {\n            res = dp(s, i, p, j + 2);\n        } else {\n            res = false;\n        }\n    }\n    // \u5c06\u5f53\u524d\u7ed3\u679c\u8bb0\u5165\u5907\u5fd8\u5f55\n    memo[key] = res;\n    \n    return res;\n}\n")))}p.isMDXComponent=!0}}]);