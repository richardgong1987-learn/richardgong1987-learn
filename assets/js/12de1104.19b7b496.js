"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[2185],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(t),f=o,g=s["".concat(c,".").concat(f)]||s[f]||m[f]||i;return t?r.createElement(g,a(a({ref:n},p),{},{components:t})):r.createElement(g,a({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},75827:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return a},default:function(){return s},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var r=t(83117),o=(t(67294),t(3905));const i={},a="2.2 \u4e8c\u7ef4\u9012\u589e\u5b50\u5e8f\u5217\uff1a\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898",title:"2.2 \u4e8c\u7ef4\u9012\u589e\u5b50\u5e8f\u5217\uff1a\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"1.6 \u6211\u5199\u4e86\u9996\u8bd7\uff0c\u4fdd\u4f60\u95ed\u7740\u773c\u775b\u5199\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u4e8c\u5206\u67e5\u627e\u8be6\u89e3"},next:{title:"3.6 Git \u539f\u7406\u4e4b\u4e8c\u53c9\u6811\u6700\u8fd1\u516c\u5171\u7956\u5148",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u516c\u5171\u7956\u5148"}},c={},u=[],p={toc:u};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"22-\u4e8c\u7ef4\u9012\u589e\u5b50\u5e8f\u5217\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898"},"2.2 \u4e8c\u7ef4\u9012\u589e\u5b50\u5e8f\u5217\uff1a\u4fe1\u5c01\u5d4c\u5957\u95ee\u9898"),(0,o.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/russian-doll-envelopes"},"354.\u4fc4\u7f57\u65af\u5957\u5a03\u4fe1\u5c01\u95ee\u9898")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"// envelopes = [[w1, h1], [w2, h2]...]\nint maxEnvelopes(int[][] envelopes) {\n    int n = envelopes.length;\n    Arrays.sort(envelopes, new Comparator<int[]>() \n    {\n        // \u6309\u5bbd\u5ea6\u5347\u5e8f\u6392\u5217\uff0c\u5982\u679c\u5bbd\u5ea6\u4e00\u6837\uff0c\u5219\u6309\u9ad8\u5ea6\u964d\u5e8f\u6392\u5217\n        public int compare(int[] a, int[] b) {\n            return a[0] == b[0] ? \n                b[1] - a[1] : a[0] - b[0];\n        }\n    });\n    // \u5bf9\u9ad8\u5ea6\u6570\u7ec4\u5bfb\u627e LIS\n    int[] height = new int[n];\n    for (int i = 0; i < n; i++)\n        height[i] = envelopes[i][1];\n\n    return lengthOfLIS(height);\n}\n\nint lengthOfLIS(int[] nums) {\n    int[] top = new int[nums.length];\n    // \u724c\u5806\u6570\u521d\u59cb\u5316\u4e3a 0\n    int piles = 0;\n    for (int i = 0; i < nums.length; i++) {\n        // \u8981\u5904\u7406\u7684\u6251\u514b\u724c\n        int poker = nums[i];\n\n        /***** \u641c\u7d22\u5de6\u4fa7\u8fb9\u754c\u7684\u4e8c\u5206\u67e5\u627e *****/\n        int left = 0, right = piles;\n        while (left < right) {\n            int mid = (left + right) / 2;\n            if (top[mid] > poker) {\n                right = mid;\n            } else if (top[mid] < poker) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        /******************************/\n        \n        // \u6ca1\u627e\u5230\u5408\u9002\u7684\u724c\u5806\uff0c\u65b0\u5efa\u4e00\u5806\n        if (left == piles) piles++;\n        // \u628a\u8fd9\u5f20\u724c\u653e\u5230\u724c\u5806\u9876\n        top[left] = poker;\n    }\n    // \u724c\u5806\u6570\u5c31\u662f LIS \u957f\u5ea6\n    return piles;\n}\n")))}s.isMDXComponent=!0}}]);