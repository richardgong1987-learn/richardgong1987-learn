(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[9229],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return p},kt:function(){return d}});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var c=r.createContext({}),l=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=l(n.components);return r.createElement(c.Provider,{value:e},n.children)},s={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,c=n.parentName,p=u(n,["components","mdxType","originalType","parentName"]),m=l(t),d=a,f=m["".concat(c,".").concat(d)]||m[d]||s[d]||o;return t?r.createElement(f,i(i({ref:e},p),{},{components:t})):r.createElement(f,i({ref:e},p))}));function d(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,i=new Array(o);i[0]=m;var u={};for(var c in e)hasOwnProperty.call(e,c)&&(u[c]=e[c]);u.originalType=n,u.mdxType="string"==typeof n?n:a,i[1]=u;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},38563:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var r=t(22122),a=t(19756),o=(t(67294),t(3905)),i=["components"],u={},c="5.7 \u5982\u4f55\u8fd0\u7528\u8d2a\u5fc3\u601d\u60f3\u73a9\u8df3\u8dc3\u6e38\u620f",l={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u8df3\u8dc3\u6e38\u620f",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u8df3\u8dc3\u6e38\u620f",isDocsHomePage:!1,title:"5.7 \u5982\u4f55\u8fd0\u7528\u8d2a\u5fc3\u601d\u60f3\u73a9\u8df3\u8dc3\u6e38\u620f",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u8df3\u8dc3\u6e38\u620f.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u8df3\u8dc3\u6e38\u620f",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u8df3\u8dc3\u6e38\u620f",editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u8df3\u8dc3\u6e38\u620f.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"5.6 \u5982\u4f55\u5bfb\u627e\u6700\u957f\u56de\u6587\u5b50\u4e32",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u9ad8\u9891\u9762\u8bd5\u7cfb\u5217/\u6700\u957f\u56de\u6587\u5b50\u4e32"},next:{title:"leetcode96",permalink:"/richardgong1987-learn/docs/c-computer/leetcode/BST/leetcode96"}},p=[{value:"5.7.1 \u8df3\u8dc3\u6e38\u620f I",id:"571-\u8df3\u8dc3\u6e38\u620f-i",children:[]},{value:"5.7.2 \u8df3\u8dc3\u6e38\u620f II",id:"572-\u8df3\u8dc3\u6e38\u620f-ii",children:[]}],s={toc:p};function m(n){var e=n.components,t=(0,a.Z)(n,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"57-\u5982\u4f55\u8fd0\u7528\u8d2a\u5fc3\u601d\u60f3\u73a9\u8df3\u8dc3\u6e38\u620f"},"5.7 \u5982\u4f55\u8fd0\u7528\u8d2a\u5fc3\u601d\u60f3\u73a9\u8df3\u8dc3\u6e38\u620f"),(0,o.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/jump-game"},"55.\u8df3\u8dc3\u6e38\u620f")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/jump-game-ii"},"45.\u8df3\u8dc3\u6e38\u620f II")),(0,o.kt)("h3",{id:"571-\u8df3\u8dc3\u6e38\u620f-i"},"5.7.1 \u8df3\u8dc3\u6e38\u620f I"),(0,o.kt)("p",null,"\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"bool canJump(vector<int>& nums);\n")),(0,o.kt)("p",null,"\u8d2a\u5fc3\u601d\u8def\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"bool canJump(vector<int>& nums) {\n    int n = nums.size();\n    int farthest = 0;\n    for (int i = 0; i < n - 1; i++) {\n        // \u4e0d\u65ad\u8ba1\u7b97\u80fd\u8df3\u5230\u7684\u6700\u8fdc\u8ddd\u79bb\n        farthest = max(farthest, i + nums[i]);\n        // \u53ef\u80fd\u78b0\u5230\u4e86 0\uff0c\u5361\u4f4f\u8df3\u4e0d\u52a8\u4e86\n        if (farthest <= i) return false;\n    }\n    return farthest >= n - 1;\n}\n")),(0,o.kt)("h3",{id:"572-\u8df3\u8dc3\u6e38\u620f-ii"},"5.7.2 \u8df3\u8dc3\u6e38\u620f II"),(0,o.kt)("p",null,"\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int jump(vector<int>& nums);\n")),(0,o.kt)("p",null,"\u52a8\u6001\u89c4\u5212\u601d\u8def\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u5907\u5fd8\u5f55\nvector<int> memo;\n/* \u4e3b\u51fd\u6570 */\nint jump(vector<int>& nums) {\n    int n = nums.size();\n    // \u5907\u5fd8\u5f55\u90fd\u521d\u59cb\u5316\u4e3a n\uff0c\u76f8\u5f53\u4e8e INT_MAX\n    // \u56e0\u4e3a\u4ece 0 \u8df3\u5230 n - 1 \u4e0d\u4f1a\u8d85\u8fc7 n - 1 \u6b65\n    memo = vector<int>(n, n);\n    return dp(nums, 0);\n}\n\n/* \u8fd4\u56de\u4ece\u7d22\u5f15 p \u8df3\u5230\u6700\u540e\u4e00\u683c\u9700\u8981\u7684\u6700\u5c11\u6b65\u6570 */\nint dp(vector<int>& nums, int p) {\n    int n = nums.size();\n    // base case\n    if (p >= n - 1) {\n        return 0;\n    }\n    // \u5b50\u95ee\u9898\u5df2\u7ecf\u8ba1\u7b97\u8fc7\n    if (memo[p] != n) {\n        return memo[p];\n    }\n    int steps = nums[p];\n    // \u7a77\u4e3e\u6bcf\u4e00\u4e2a\u9009\u62e9\n    // \u4f60\u53ef\u4ee5\u9009\u62e9\u8df3 1 \u6b65\uff0c2 \u6b65...nums[p] \u6b65\n    for (int i = 1; i <= steps; i++) {\n        // \u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5b50\u95ee\u9898\u7684\u7ed3\u679c\n        int subProblem = dp(nums, p + i);\n        // \u53d6\u5176\u4e2d\u6700\u5c0f\u7684\u4f5c\u4e3a\u6700\u7ec8\u7ed3\u679c\n        memo[p] = min(memo[p], subProblem + 1);\n    }\n    return memo[p];\n}\n")),(0,o.kt)("p",null,"\u8d2a\u5fc3\u601d\u8def\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int jump(vector<int>& nums) {\n    int n = nums.size();\n    // \u7ad9\u5728\u7d22\u5f15 i\uff0c\u6700\u591a\u80fd\u8df3\u5230\u7d22\u5f15 end\n    int end = 0;\n    // \u4ece\u7d22\u5f15 [i..end] \u8d77\u8df3\uff0c\u6700\u8fdc\u80fd\u5230\u7684\u8ddd\u79bb\n    int farthest = 0;\n    // \u8bb0\u5f55\u8df3\u8dc3\u6b21\u6570\n    int jumps = 0;\n    for (int i = 0; i < n - 1; i++) {\n        farthest = max(nums[i] + i, farthest);\n        if (end == i) {\n            jumps++;\n            end = farthest;\n        }\n    }\n    return jumps;\n}\n")))}m.isMDXComponent=!0}}]);