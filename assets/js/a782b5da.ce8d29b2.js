"use strict";(self.webpackChunkrichardgong_1987_learn=self.webpackChunkrichardgong_1987_learn||[]).push([[1329],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return g}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=r.createContext({}),i=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=i(t.components);return r.createElement(u.Provider,{value:e},t.children)},p="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,u=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),p=i(n),f=a,g=p["".concat(u,".").concat(f)]||p[f]||m[f]||l;return n?r.createElement(g,o(o({ref:e},c),{},{components:n})):r.createElement(g,o({ref:e},c))}));function g(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=f;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=t,s[p]="string"==typeof t?t:a,o[1]=s;for(var i=2;i<l;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9608:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return i}});var r=n(83117),a=(n(67294),n(3905));const l={},o="1.5 \u53cc\u6307\u9488\u6280\u5de7\u5957\u8def\u6846\u67b6",s={unversionedId:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u53cc\u6307\u9488\u6280\u5de7",id:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u53cc\u6307\u9488\u6280\u5de7",title:"1.5 \u53cc\u6307\u9488\u6280\u5de7\u5957\u8def\u6846\u67b6",description:"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a",source:"@site/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u53cc\u6307\u9488\u6280\u5de7.md",sourceDirName:"c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217",slug:"/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u53cc\u6307\u9488\u6280\u5de7",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u53cc\u6307\u9488\u6280\u5de7",draft:!1,editUrl:"https://github.com/richardgong1987-learn/richardgong1987-learn/edit/master/website/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u53cc\u6307\u9488\u6280\u5de7.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"4.9 \u524d\u7f00\u548c\u6280\u5de7\u89e3\u51b3\u5b50\u6570\u7ec4\u95ee\u9898",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u524d\u7f00\u548c\u6280\u5de7"},next:{title:"4.3 \u56de\u6eaf\u7b97\u6cd5\u6700\u4f73\u5b9e\u8df5\uff1a\u62ec\u53f7\u751f\u6210",permalink:"/richardgong1987-learn/docs/c-computer/AlgorithmsDataStructures/labuladong\u7b97\u6cd5\u5c0f\u6284\u4ee3\u7801/\u7b97\u6cd5\u601d\u7ef4\u7cfb\u5217/\u5408\u6cd5\u62ec\u53f7\u751f\u6210"}},u={},i=[{value:"1.5.1 \u5feb\u6162\u6307\u9488\u7684\u5e38\u89c1\u7b97\u6cd5",id:"151-\u5feb\u6162\u6307\u9488\u7684\u5e38\u89c1\u7b97\u6cd5",level:3},{value:"1.5.2 \u5de6\u53f3\u6307\u9488\u7684\u5e38\u7528\u7b97\u6cd5",id:"152-\u5de6\u53f3\u6307\u9488\u7684\u5e38\u7528\u7b97\u6cd5",level:3}],c={toc:i};function p(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"15-\u53cc\u6307\u9488\u6280\u5de7\u5957\u8def\u6846\u67b6"},"1.5 \u53cc\u6307\u9488\u6280\u5de7\u5957\u8def\u6846\u67b6"),(0,a.kt)("p",null,"\u672c\u6587\u5bf9\u5e94\u7684\u529b\u6263\u9898\u76ee\uff1a"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/linked-list-cycle"},"141.\u73af\u5f62\u94fe\u8868")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/linked-list-cycle-ii"},"141.\u73af\u5f62\u94fe\u8868II")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/two-sum"},"167.\u4e24\u6570\u4e4b\u548c II - \u8f93\u5165\u6709\u5e8f\u6570\u7ec4")),(0,a.kt)("h3",{id:"151-\u5feb\u6162\u6307\u9488\u7684\u5e38\u89c1\u7b97\u6cd5"},"1.5.1 \u5feb\u6162\u6307\u9488\u7684\u5e38\u89c1\u7b97\u6cd5"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1\u3001\u5224\u5b9a\u94fe\u8868\u4e2d\u662f\u5426\u542b\u6709\u73af")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"boolean hasCycle(ListNode head) {\n    ListNode fast, slow;\n    // \u5feb\u6162\u6307\u9488\u521d\u59cb\u5316\u6307\u5411\u5934\u7ed3\u70b9\n    fast = slow = head;\n    while (fast != null && fast.next != null) {\n        // \u5feb\u6307\u9488\u6bcf\u6b21\u524d\u8fdb\u4e24\u6b65\n        fast = fast.next.next;\n        // \u6ee1\u6307\u9488\u6bcf\u6b21\u524d\u8fdb\u4e00\u6b65\n        slow = slow.next;\n        // \u5982\u679c\u51fa\u73b0\n        if (fast == slow) return true;\n    }\n    return false;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2\u3001\u5df2\u77e5\u94fe\u8868\u4e2d\u542b\u6709\u73af\uff0c\u8fd4\u56de\u8fd9\u4e2a\u73af\u7684\u8d77\u59cb\u4f4d\u7f6e")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"ListNode detectCycle(ListNode head) {\n    ListNode fast, slow;\n    fast = slow = head;\n    while (fast != null && fast.next != null) {\n        fast = fast.next.next;\n        slow = slow.next;\n        if (fast == slow) break;\n    }\n    // \u4e0a\u9762\u7684\u4ee3\u7801\u7c7b\u4f3c hasCycle \u51fd\u6570\n    if (fast == null || fast.next == null) {\n        // fast \u9047\u5230\u7a7a\u6307\u9488\u8bf4\u660e\u6ca1\u6709\u73af\n        return null;\n    }\n    // \u7136\u540e\u5148\u628a\u4e00\u4e2a\u6307\u9488\u91cd\u65b0\u6307\u5411 head\n    slow = head;\n    while (slow != fast) {\n        // \u4e24\u4e2a\u6307\u9488\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u524d\u8fdb\n        fast = fast.next;\n        slow = slow.next;\n    }\n    // \u4e24\u4e2a\u6307\u9488\u76f8\u9047\u7684\u90a3\u4e2a\u5355\u94fe\u8868\u8282\u70b9\u5c31\u662f\u73af\u7684\u8d77\u70b9\n    return slow;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3\u3001\u5bfb\u627e\u65e0\u73af\u5355\u94fe\u8868\u7684\u4e2d\u70b9")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"ListNode middleNode(ListNode head) {\n    ListNode fast, slow;\n    fast = slow = head;\n    while (fast != null && fast.next != null) {\n        fast = fast.next.next;\n        slow = slow.next;\n    }\n    // slow \u5c31\u5728\u4e2d\u95f4\u4f4d\u7f6e\n    return slow;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4\u3001\u5bfb\u627e\u5355\u94fe\u8868\u7684\u5012\u6570\u7b2c ",(0,a.kt)("inlineCode",{parentName:"strong"},"k")," \u4e2a\u5143\u7d20")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"ListNode slow, fast;\nslow = fast = head;\nwhile (k-- > 0) \n    fast = fast.next;\n\nwhile (fast != null) {\n    slow = slow.next;\n    fast = fast.next;\n}\nreturn slow;\n")),(0,a.kt)("h3",{id:"152-\u5de6\u53f3\u6307\u9488\u7684\u5e38\u7528\u7b97\u6cd5"},"1.5.2 \u5de6\u53f3\u6307\u9488\u7684\u5e38\u7528\u7b97\u6cd5"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1\u3001\u4e8c\u5206\u67e5\u627e")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"int binarySearch(int[] nums, int target) {\n    // \u5de6\u53f3\u6307\u9488\u521d\u59cb\u5316\u5728\u6570\u7ec4\u7684\u4e24\u7aef\n    int left = 0; \n    int right = nums.length - 1;\n    while(left <= right) {\n        int mid = (right + left) / 2;\n        if(nums[mid] == target)\n            return mid;\n        else if (nums[mid] < target)\n            left = mid + 1;\n        else if (nums[mid] > target)\n            right = mid - 1;\n    }\n    return -1;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2\u3001\u4e24\u6570\u4e4b\u548c")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"int[] twoSum(int[] nums, int target) {\n    // \u5de6\u53f3\u6307\u9488\u521d\u59cb\u5316\u5728\u6570\u7ec4\u7684\u4e24\u7aef\n    int left = 0, right = nums.length - 1;\n    while (left < right) {\n        int sum = nums[left] + nums[right];\n        if (sum == target) {\n            // \u9898\u76ee\u8981\u6c42\u7684\u7d22\u5f15\u662f\u4ece 1 \u5f00\u59cb\u7684\n            return new int[]{left + 1, right + 1};\n        } else if (sum < target) {\n            left++; // \u8ba9 sum \u5927\u4e00\u70b9\n        } else if (sum > target) {\n            right--; // \u8ba9 sum \u5c0f\u4e00\u70b9\n        }\n    }\n    return new int[]{-1, -1};\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3\u3001\u53cd\u8f6c\u6570\u7ec4")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"void reverse(int[] nums) {\n    int left = 0;\n    int right = nums.length - 1;\n    while (left < right) {\n        // \u4ea4\u6362 nums[left] \u548c nums[right]\n        int temp = nums[left];\n        nums[left] = nums[right];\n        nums[right] = temp;\n        left++; right--;\n    }\n}\n")))}p.isMDXComponent=!0}}]);